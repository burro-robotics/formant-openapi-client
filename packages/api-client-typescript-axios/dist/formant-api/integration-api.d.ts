/**
 * Formant admin-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.193.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { RequestArgs, BaseAPI } from '../base';
import { IntegrationControllerCreateHTTPIntegration200Response } from '../formant-models';
import { IntegrationControllerGetHTTPIntegrations200ResponseInner } from '../formant-models';
import { IntegrationControllerGetNodeGraphIntegrations200ResponseInner } from '../formant-models';
import { IntegrationControllerGoogleRequest } from '../formant-models';
import { IntegrationControllerSlack200Response } from '../formant-models';
import { IntegrationControllerSlackRequest } from '../formant-models';
import { IntegrationControllerUpdateHTTPIntegrationRequest } from '../formant-models';
import { IntegrationControllerUpdateNodeGraphIntegrationRequest } from '../formant-models';
/**
 * IntegrationApi - axios parameter creator
 * @export
 */
export declare const IntegrationApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Create an HTTP integration Resource: integrations Authorized roles: administrator
     * @summary Create http integration
     * @param {IntegrationControllerGetHTTPIntegrations200ResponseInner} integrationControllerGetHTTPIntegrations200ResponseInner HttpIntegration
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    integrationControllerCreateHTTPIntegration: (integrationControllerGetHTTPIntegrations200ResponseInner: IntegrationControllerGetHTTPIntegrations200ResponseInner, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Create a Node Graph integration Resource: integrations Authorized roles: administrator
     * @summary Create node graph integration
     * @param {IntegrationControllerGetNodeGraphIntegrations200ResponseInner} integrationControllerGetNodeGraphIntegrations200ResponseInner NodeGraphIntegration
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    integrationControllerCreateNodeGraphIntegration: (integrationControllerGetNodeGraphIntegrations200ResponseInner: IntegrationControllerGetNodeGraphIntegrations200ResponseInner, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Delete HTTP integration Resource: integrations Authorized roles: administrator
     * @summary Delete http integration
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    integrationControllerDeleteHTTPIntegration: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Delete Node Graph integration Resource: integrations Authorized roles: administrator
     * @summary Delete node graph integration
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    integrationControllerDeleteNodeGraphIntegration: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Execute GET HTTP integration Resource: streams Authorized roles: viewer
     * @summary Execute get http integration
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    integrationControllerExecuteGetHTTPIntegration: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Execute POST HTTP integration Resource: streams Authorized roles: viewer
     * @summary Execute http integration
     * @param {string} id
     * @param {any} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    integrationControllerExecuteHTTPIntegration: (id: string, body: any, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Execute Node Graph integration Resource: streams Authorized roles: viewer
     * @summary Execute node graph integration
     * @param {string} id
     * @param {any} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    integrationControllerExecuteNodeGraphIntegration: (id: string, body: any, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get HTTP integration Resource: integrations Authorized roles: administrator
     * @summary Get http integration
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    integrationControllerGetHTTPIntegration: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get HTTP integrations Resource: integrations Authorized roles: administrator
     * @summary Get http integrations
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    integrationControllerGetHTTPIntegrations: (options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get Node Graph integration Resource: integrations Authorized roles: viewer
     * @summary Get node graph integration
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    integrationControllerGetNodeGraphIntegration: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get Node Graph integrations Resource: integrations Authorized roles: administrator
     * @summary Get node graph integrations
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    integrationControllerGetNodeGraphIntegrations: (options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Create a Google integration Resource: integrations Authorized roles: administrator
     * @summary Google
     * @param {IntegrationControllerGoogleRequest} integrationControllerGoogleRequest GoogleAuthRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    integrationControllerGoogle: (integrationControllerGoogleRequest: IntegrationControllerGoogleRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Create a Slack integration Resource: integrations Authorized roles: administrator
     * @summary Slack
     * @param {IntegrationControllerSlackRequest} integrationControllerSlackRequest SlackAuthRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    integrationControllerSlack: (integrationControllerSlackRequest: IntegrationControllerSlackRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Update HTTP integration Resource: integrations Authorized roles: administrator
     * @summary Update http integration
     * @param {string} id
     * @param {IntegrationControllerUpdateHTTPIntegrationRequest} integrationControllerUpdateHTTPIntegrationRequest PartialHttpIntegration
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    integrationControllerUpdateHTTPIntegration: (id: string, integrationControllerUpdateHTTPIntegrationRequest: IntegrationControllerUpdateHTTPIntegrationRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Update Node Graph integration Resource: integrations Authorized roles: administrator
     * @summary Update node graph integration
     * @param {string} id
     * @param {IntegrationControllerUpdateNodeGraphIntegrationRequest} integrationControllerUpdateNodeGraphIntegrationRequest PartialNodeGraphIntegration
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    integrationControllerUpdateNodeGraphIntegration: (id: string, integrationControllerUpdateNodeGraphIntegrationRequest: IntegrationControllerUpdateNodeGraphIntegrationRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * IntegrationApi - functional programming interface
 * @export
 */
export declare const IntegrationApiFp: (configuration?: Configuration) => {
    /**
     * Create an HTTP integration Resource: integrations Authorized roles: administrator
     * @summary Create http integration
     * @param {IntegrationControllerGetHTTPIntegrations200ResponseInner} integrationControllerGetHTTPIntegrations200ResponseInner HttpIntegration
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    integrationControllerCreateHTTPIntegration(integrationControllerGetHTTPIntegrations200ResponseInner: IntegrationControllerGetHTTPIntegrations200ResponseInner, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IntegrationControllerCreateHTTPIntegration200Response>>;
    /**
     * Create a Node Graph integration Resource: integrations Authorized roles: administrator
     * @summary Create node graph integration
     * @param {IntegrationControllerGetNodeGraphIntegrations200ResponseInner} integrationControllerGetNodeGraphIntegrations200ResponseInner NodeGraphIntegration
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    integrationControllerCreateNodeGraphIntegration(integrationControllerGetNodeGraphIntegrations200ResponseInner: IntegrationControllerGetNodeGraphIntegrations200ResponseInner, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IntegrationControllerGetNodeGraphIntegrations200ResponseInner>>;
    /**
     * Delete HTTP integration Resource: integrations Authorized roles: administrator
     * @summary Delete http integration
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    integrationControllerDeleteHTTPIntegration(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IntegrationControllerGetHTTPIntegrations200ResponseInner>>;
    /**
     * Delete Node Graph integration Resource: integrations Authorized roles: administrator
     * @summary Delete node graph integration
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    integrationControllerDeleteNodeGraphIntegration(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IntegrationControllerGetNodeGraphIntegrations200ResponseInner>>;
    /**
     * Execute GET HTTP integration Resource: streams Authorized roles: viewer
     * @summary Execute get http integration
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    integrationControllerExecuteGetHTTPIntegration(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IntegrationControllerCreateHTTPIntegration200Response>>;
    /**
     * Execute POST HTTP integration Resource: streams Authorized roles: viewer
     * @summary Execute http integration
     * @param {string} id
     * @param {any} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    integrationControllerExecuteHTTPIntegration(id: string, body: any, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IntegrationControllerCreateHTTPIntegration200Response>>;
    /**
     * Execute Node Graph integration Resource: streams Authorized roles: viewer
     * @summary Execute node graph integration
     * @param {string} id
     * @param {any} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    integrationControllerExecuteNodeGraphIntegration(id: string, body: any, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IntegrationControllerGetNodeGraphIntegrations200ResponseInner>>;
    /**
     * Get HTTP integration Resource: integrations Authorized roles: administrator
     * @summary Get http integration
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    integrationControllerGetHTTPIntegration(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IntegrationControllerGetHTTPIntegrations200ResponseInner>>;
    /**
     * Get HTTP integrations Resource: integrations Authorized roles: administrator
     * @summary Get http integrations
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    integrationControllerGetHTTPIntegrations(options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<IntegrationControllerGetHTTPIntegrations200ResponseInner>>>;
    /**
     * Get Node Graph integration Resource: integrations Authorized roles: viewer
     * @summary Get node graph integration
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    integrationControllerGetNodeGraphIntegration(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IntegrationControllerGetNodeGraphIntegrations200ResponseInner>>;
    /**
     * Get Node Graph integrations Resource: integrations Authorized roles: administrator
     * @summary Get node graph integrations
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    integrationControllerGetNodeGraphIntegrations(options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<IntegrationControllerGetNodeGraphIntegrations200ResponseInner>>>;
    /**
     * Create a Google integration Resource: integrations Authorized roles: administrator
     * @summary Google
     * @param {IntegrationControllerGoogleRequest} integrationControllerGoogleRequest GoogleAuthRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    integrationControllerGoogle(integrationControllerGoogleRequest: IntegrationControllerGoogleRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IntegrationControllerCreateHTTPIntegration200Response>>;
    /**
     * Create a Slack integration Resource: integrations Authorized roles: administrator
     * @summary Slack
     * @param {IntegrationControllerSlackRequest} integrationControllerSlackRequest SlackAuthRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    integrationControllerSlack(integrationControllerSlackRequest: IntegrationControllerSlackRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IntegrationControllerSlack200Response>>;
    /**
     * Update HTTP integration Resource: integrations Authorized roles: administrator
     * @summary Update http integration
     * @param {string} id
     * @param {IntegrationControllerUpdateHTTPIntegrationRequest} integrationControllerUpdateHTTPIntegrationRequest PartialHttpIntegration
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    integrationControllerUpdateHTTPIntegration(id: string, integrationControllerUpdateHTTPIntegrationRequest: IntegrationControllerUpdateHTTPIntegrationRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IntegrationControllerGetHTTPIntegrations200ResponseInner>>;
    /**
     * Update Node Graph integration Resource: integrations Authorized roles: administrator
     * @summary Update node graph integration
     * @param {string} id
     * @param {IntegrationControllerUpdateNodeGraphIntegrationRequest} integrationControllerUpdateNodeGraphIntegrationRequest PartialNodeGraphIntegration
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    integrationControllerUpdateNodeGraphIntegration(id: string, integrationControllerUpdateNodeGraphIntegrationRequest: IntegrationControllerUpdateNodeGraphIntegrationRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IntegrationControllerGetNodeGraphIntegrations200ResponseInner>>;
};
/**
 * IntegrationApi - factory interface
 * @export
 */
export declare const IntegrationApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Create an HTTP integration Resource: integrations Authorized roles: administrator
     * @summary Create http integration
     * @param {IntegrationApiIntegrationControllerCreateHTTPIntegrationRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    integrationControllerCreateHTTPIntegration(requestParameters: IntegrationApiIntegrationControllerCreateHTTPIntegrationRequest, options?: RawAxiosRequestConfig): AxiosPromise<IntegrationControllerCreateHTTPIntegration200Response>;
    /**
     * Create a Node Graph integration Resource: integrations Authorized roles: administrator
     * @summary Create node graph integration
     * @param {IntegrationApiIntegrationControllerCreateNodeGraphIntegrationRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    integrationControllerCreateNodeGraphIntegration(requestParameters: IntegrationApiIntegrationControllerCreateNodeGraphIntegrationRequest, options?: RawAxiosRequestConfig): AxiosPromise<IntegrationControllerGetNodeGraphIntegrations200ResponseInner>;
    /**
     * Delete HTTP integration Resource: integrations Authorized roles: administrator
     * @summary Delete http integration
     * @param {IntegrationApiIntegrationControllerDeleteHTTPIntegrationRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    integrationControllerDeleteHTTPIntegration(requestParameters: IntegrationApiIntegrationControllerDeleteHTTPIntegrationRequest, options?: RawAxiosRequestConfig): AxiosPromise<IntegrationControllerGetHTTPIntegrations200ResponseInner>;
    /**
     * Delete Node Graph integration Resource: integrations Authorized roles: administrator
     * @summary Delete node graph integration
     * @param {IntegrationApiIntegrationControllerDeleteNodeGraphIntegrationRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    integrationControllerDeleteNodeGraphIntegration(requestParameters: IntegrationApiIntegrationControllerDeleteNodeGraphIntegrationRequest, options?: RawAxiosRequestConfig): AxiosPromise<IntegrationControllerGetNodeGraphIntegrations200ResponseInner>;
    /**
     * Execute GET HTTP integration Resource: streams Authorized roles: viewer
     * @summary Execute get http integration
     * @param {IntegrationApiIntegrationControllerExecuteGetHTTPIntegrationRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    integrationControllerExecuteGetHTTPIntegration(requestParameters: IntegrationApiIntegrationControllerExecuteGetHTTPIntegrationRequest, options?: RawAxiosRequestConfig): AxiosPromise<IntegrationControllerCreateHTTPIntegration200Response>;
    /**
     * Execute POST HTTP integration Resource: streams Authorized roles: viewer
     * @summary Execute http integration
     * @param {IntegrationApiIntegrationControllerExecuteHTTPIntegrationRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    integrationControllerExecuteHTTPIntegration(requestParameters: IntegrationApiIntegrationControllerExecuteHTTPIntegrationRequest, options?: RawAxiosRequestConfig): AxiosPromise<IntegrationControllerCreateHTTPIntegration200Response>;
    /**
     * Execute Node Graph integration Resource: streams Authorized roles: viewer
     * @summary Execute node graph integration
     * @param {IntegrationApiIntegrationControllerExecuteNodeGraphIntegrationRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    integrationControllerExecuteNodeGraphIntegration(requestParameters: IntegrationApiIntegrationControllerExecuteNodeGraphIntegrationRequest, options?: RawAxiosRequestConfig): AxiosPromise<IntegrationControllerGetNodeGraphIntegrations200ResponseInner>;
    /**
     * Get HTTP integration Resource: integrations Authorized roles: administrator
     * @summary Get http integration
     * @param {IntegrationApiIntegrationControllerGetHTTPIntegrationRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    integrationControllerGetHTTPIntegration(requestParameters: IntegrationApiIntegrationControllerGetHTTPIntegrationRequest, options?: RawAxiosRequestConfig): AxiosPromise<IntegrationControllerGetHTTPIntegrations200ResponseInner>;
    /**
     * Get HTTP integrations Resource: integrations Authorized roles: administrator
     * @summary Get http integrations
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    integrationControllerGetHTTPIntegrations(options?: RawAxiosRequestConfig): AxiosPromise<Array<IntegrationControllerGetHTTPIntegrations200ResponseInner>>;
    /**
     * Get Node Graph integration Resource: integrations Authorized roles: viewer
     * @summary Get node graph integration
     * @param {IntegrationApiIntegrationControllerGetNodeGraphIntegrationRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    integrationControllerGetNodeGraphIntegration(requestParameters: IntegrationApiIntegrationControllerGetNodeGraphIntegrationRequest, options?: RawAxiosRequestConfig): AxiosPromise<IntegrationControllerGetNodeGraphIntegrations200ResponseInner>;
    /**
     * Get Node Graph integrations Resource: integrations Authorized roles: administrator
     * @summary Get node graph integrations
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    integrationControllerGetNodeGraphIntegrations(options?: RawAxiosRequestConfig): AxiosPromise<Array<IntegrationControllerGetNodeGraphIntegrations200ResponseInner>>;
    /**
     * Create a Google integration Resource: integrations Authorized roles: administrator
     * @summary Google
     * @param {IntegrationApiIntegrationControllerGoogleRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    integrationControllerGoogle(requestParameters: IntegrationApiIntegrationControllerGoogleRequest, options?: RawAxiosRequestConfig): AxiosPromise<IntegrationControllerCreateHTTPIntegration200Response>;
    /**
     * Create a Slack integration Resource: integrations Authorized roles: administrator
     * @summary Slack
     * @param {IntegrationApiIntegrationControllerSlackRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    integrationControllerSlack(requestParameters: IntegrationApiIntegrationControllerSlackRequest, options?: RawAxiosRequestConfig): AxiosPromise<IntegrationControllerSlack200Response>;
    /**
     * Update HTTP integration Resource: integrations Authorized roles: administrator
     * @summary Update http integration
     * @param {IntegrationApiIntegrationControllerUpdateHTTPIntegrationRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    integrationControllerUpdateHTTPIntegration(requestParameters: IntegrationApiIntegrationControllerUpdateHTTPIntegrationRequest, options?: RawAxiosRequestConfig): AxiosPromise<IntegrationControllerGetHTTPIntegrations200ResponseInner>;
    /**
     * Update Node Graph integration Resource: integrations Authorized roles: administrator
     * @summary Update node graph integration
     * @param {IntegrationApiIntegrationControllerUpdateNodeGraphIntegrationRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    integrationControllerUpdateNodeGraphIntegration(requestParameters: IntegrationApiIntegrationControllerUpdateNodeGraphIntegrationRequest, options?: RawAxiosRequestConfig): AxiosPromise<IntegrationControllerGetNodeGraphIntegrations200ResponseInner>;
};
/**
 * Request parameters for integrationControllerCreateHTTPIntegration operation in IntegrationApi.
 * @export
 * @interface IntegrationApiIntegrationControllerCreateHTTPIntegrationRequest
 */
export interface IntegrationApiIntegrationControllerCreateHTTPIntegrationRequest {
    /**
     * HttpIntegration
     * @type {IntegrationControllerGetHTTPIntegrations200ResponseInner}
     * @memberof IntegrationApiIntegrationControllerCreateHTTPIntegration
     */
    readonly integrationControllerGetHTTPIntegrations200ResponseInner: IntegrationControllerGetHTTPIntegrations200ResponseInner;
}
/**
 * Request parameters for integrationControllerCreateNodeGraphIntegration operation in IntegrationApi.
 * @export
 * @interface IntegrationApiIntegrationControllerCreateNodeGraphIntegrationRequest
 */
export interface IntegrationApiIntegrationControllerCreateNodeGraphIntegrationRequest {
    /**
     * NodeGraphIntegration
     * @type {IntegrationControllerGetNodeGraphIntegrations200ResponseInner}
     * @memberof IntegrationApiIntegrationControllerCreateNodeGraphIntegration
     */
    readonly integrationControllerGetNodeGraphIntegrations200ResponseInner: IntegrationControllerGetNodeGraphIntegrations200ResponseInner;
}
/**
 * Request parameters for integrationControllerDeleteHTTPIntegration operation in IntegrationApi.
 * @export
 * @interface IntegrationApiIntegrationControllerDeleteHTTPIntegrationRequest
 */
export interface IntegrationApiIntegrationControllerDeleteHTTPIntegrationRequest {
    /**
     *
     * @type {string}
     * @memberof IntegrationApiIntegrationControllerDeleteHTTPIntegration
     */
    readonly id: string;
}
/**
 * Request parameters for integrationControllerDeleteNodeGraphIntegration operation in IntegrationApi.
 * @export
 * @interface IntegrationApiIntegrationControllerDeleteNodeGraphIntegrationRequest
 */
export interface IntegrationApiIntegrationControllerDeleteNodeGraphIntegrationRequest {
    /**
     *
     * @type {string}
     * @memberof IntegrationApiIntegrationControllerDeleteNodeGraphIntegration
     */
    readonly id: string;
}
/**
 * Request parameters for integrationControllerExecuteGetHTTPIntegration operation in IntegrationApi.
 * @export
 * @interface IntegrationApiIntegrationControllerExecuteGetHTTPIntegrationRequest
 */
export interface IntegrationApiIntegrationControllerExecuteGetHTTPIntegrationRequest {
    /**
     *
     * @type {string}
     * @memberof IntegrationApiIntegrationControllerExecuteGetHTTPIntegration
     */
    readonly id: string;
}
/**
 * Request parameters for integrationControllerExecuteHTTPIntegration operation in IntegrationApi.
 * @export
 * @interface IntegrationApiIntegrationControllerExecuteHTTPIntegrationRequest
 */
export interface IntegrationApiIntegrationControllerExecuteHTTPIntegrationRequest {
    /**
     *
     * @type {string}
     * @memberof IntegrationApiIntegrationControllerExecuteHTTPIntegration
     */
    readonly id: string;
    /**
     *
     * @type {any}
     * @memberof IntegrationApiIntegrationControllerExecuteHTTPIntegration
     */
    readonly body: any;
}
/**
 * Request parameters for integrationControllerExecuteNodeGraphIntegration operation in IntegrationApi.
 * @export
 * @interface IntegrationApiIntegrationControllerExecuteNodeGraphIntegrationRequest
 */
export interface IntegrationApiIntegrationControllerExecuteNodeGraphIntegrationRequest {
    /**
     *
     * @type {string}
     * @memberof IntegrationApiIntegrationControllerExecuteNodeGraphIntegration
     */
    readonly id: string;
    /**
     *
     * @type {any}
     * @memberof IntegrationApiIntegrationControllerExecuteNodeGraphIntegration
     */
    readonly body: any;
}
/**
 * Request parameters for integrationControllerGetHTTPIntegration operation in IntegrationApi.
 * @export
 * @interface IntegrationApiIntegrationControllerGetHTTPIntegrationRequest
 */
export interface IntegrationApiIntegrationControllerGetHTTPIntegrationRequest {
    /**
     *
     * @type {string}
     * @memberof IntegrationApiIntegrationControllerGetHTTPIntegration
     */
    readonly id: string;
}
/**
 * Request parameters for integrationControllerGetNodeGraphIntegration operation in IntegrationApi.
 * @export
 * @interface IntegrationApiIntegrationControllerGetNodeGraphIntegrationRequest
 */
export interface IntegrationApiIntegrationControllerGetNodeGraphIntegrationRequest {
    /**
     *
     * @type {string}
     * @memberof IntegrationApiIntegrationControllerGetNodeGraphIntegration
     */
    readonly id: string;
}
/**
 * Request parameters for integrationControllerGoogle operation in IntegrationApi.
 * @export
 * @interface IntegrationApiIntegrationControllerGoogleRequest
 */
export interface IntegrationApiIntegrationControllerGoogleRequest {
    /**
     * GoogleAuthRequest
     * @type {IntegrationControllerGoogleRequest}
     * @memberof IntegrationApiIntegrationControllerGoogle
     */
    readonly integrationControllerGoogleRequest: IntegrationControllerGoogleRequest;
}
/**
 * Request parameters for integrationControllerSlack operation in IntegrationApi.
 * @export
 * @interface IntegrationApiIntegrationControllerSlackRequest
 */
export interface IntegrationApiIntegrationControllerSlackRequest {
    /**
     * SlackAuthRequest
     * @type {IntegrationControllerSlackRequest}
     * @memberof IntegrationApiIntegrationControllerSlack
     */
    readonly integrationControllerSlackRequest: IntegrationControllerSlackRequest;
}
/**
 * Request parameters for integrationControllerUpdateHTTPIntegration operation in IntegrationApi.
 * @export
 * @interface IntegrationApiIntegrationControllerUpdateHTTPIntegrationRequest
 */
export interface IntegrationApiIntegrationControllerUpdateHTTPIntegrationRequest {
    /**
     *
     * @type {string}
     * @memberof IntegrationApiIntegrationControllerUpdateHTTPIntegration
     */
    readonly id: string;
    /**
     * PartialHttpIntegration
     * @type {IntegrationControllerUpdateHTTPIntegrationRequest}
     * @memberof IntegrationApiIntegrationControllerUpdateHTTPIntegration
     */
    readonly integrationControllerUpdateHTTPIntegrationRequest: IntegrationControllerUpdateHTTPIntegrationRequest;
}
/**
 * Request parameters for integrationControllerUpdateNodeGraphIntegration operation in IntegrationApi.
 * @export
 * @interface IntegrationApiIntegrationControllerUpdateNodeGraphIntegrationRequest
 */
export interface IntegrationApiIntegrationControllerUpdateNodeGraphIntegrationRequest {
    /**
     *
     * @type {string}
     * @memberof IntegrationApiIntegrationControllerUpdateNodeGraphIntegration
     */
    readonly id: string;
    /**
     * PartialNodeGraphIntegration
     * @type {IntegrationControllerUpdateNodeGraphIntegrationRequest}
     * @memberof IntegrationApiIntegrationControllerUpdateNodeGraphIntegration
     */
    readonly integrationControllerUpdateNodeGraphIntegrationRequest: IntegrationControllerUpdateNodeGraphIntegrationRequest;
}
/**
 * IntegrationApi - object-oriented interface
 * @export
 * @class IntegrationApi
 * @extends {BaseAPI}
 */
export declare class IntegrationApi extends BaseAPI {
    /**
     * Create an HTTP integration Resource: integrations Authorized roles: administrator
     * @summary Create http integration
     * @param {IntegrationApiIntegrationControllerCreateHTTPIntegrationRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IntegrationApi
     */
    integrationControllerCreateHTTPIntegration(requestParameters: IntegrationApiIntegrationControllerCreateHTTPIntegrationRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<IntegrationControllerCreateHTTPIntegration200Response, any>>;
    /**
     * Create a Node Graph integration Resource: integrations Authorized roles: administrator
     * @summary Create node graph integration
     * @param {IntegrationApiIntegrationControllerCreateNodeGraphIntegrationRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IntegrationApi
     */
    integrationControllerCreateNodeGraphIntegration(requestParameters: IntegrationApiIntegrationControllerCreateNodeGraphIntegrationRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<IntegrationControllerGetNodeGraphIntegrations200ResponseInner, any>>;
    /**
     * Delete HTTP integration Resource: integrations Authorized roles: administrator
     * @summary Delete http integration
     * @param {IntegrationApiIntegrationControllerDeleteHTTPIntegrationRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IntegrationApi
     */
    integrationControllerDeleteHTTPIntegration(requestParameters: IntegrationApiIntegrationControllerDeleteHTTPIntegrationRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<IntegrationControllerGetHTTPIntegrations200ResponseInner, any>>;
    /**
     * Delete Node Graph integration Resource: integrations Authorized roles: administrator
     * @summary Delete node graph integration
     * @param {IntegrationApiIntegrationControllerDeleteNodeGraphIntegrationRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IntegrationApi
     */
    integrationControllerDeleteNodeGraphIntegration(requestParameters: IntegrationApiIntegrationControllerDeleteNodeGraphIntegrationRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<IntegrationControllerGetNodeGraphIntegrations200ResponseInner, any>>;
    /**
     * Execute GET HTTP integration Resource: streams Authorized roles: viewer
     * @summary Execute get http integration
     * @param {IntegrationApiIntegrationControllerExecuteGetHTTPIntegrationRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IntegrationApi
     */
    integrationControllerExecuteGetHTTPIntegration(requestParameters: IntegrationApiIntegrationControllerExecuteGetHTTPIntegrationRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<IntegrationControllerCreateHTTPIntegration200Response, any>>;
    /**
     * Execute POST HTTP integration Resource: streams Authorized roles: viewer
     * @summary Execute http integration
     * @param {IntegrationApiIntegrationControllerExecuteHTTPIntegrationRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IntegrationApi
     */
    integrationControllerExecuteHTTPIntegration(requestParameters: IntegrationApiIntegrationControllerExecuteHTTPIntegrationRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<IntegrationControllerCreateHTTPIntegration200Response, any>>;
    /**
     * Execute Node Graph integration Resource: streams Authorized roles: viewer
     * @summary Execute node graph integration
     * @param {IntegrationApiIntegrationControllerExecuteNodeGraphIntegrationRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IntegrationApi
     */
    integrationControllerExecuteNodeGraphIntegration(requestParameters: IntegrationApiIntegrationControllerExecuteNodeGraphIntegrationRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<IntegrationControllerGetNodeGraphIntegrations200ResponseInner, any>>;
    /**
     * Get HTTP integration Resource: integrations Authorized roles: administrator
     * @summary Get http integration
     * @param {IntegrationApiIntegrationControllerGetHTTPIntegrationRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IntegrationApi
     */
    integrationControllerGetHTTPIntegration(requestParameters: IntegrationApiIntegrationControllerGetHTTPIntegrationRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<IntegrationControllerGetHTTPIntegrations200ResponseInner, any>>;
    /**
     * Get HTTP integrations Resource: integrations Authorized roles: administrator
     * @summary Get http integrations
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IntegrationApi
     */
    integrationControllerGetHTTPIntegrations(options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<IntegrationControllerGetHTTPIntegrations200ResponseInner[], any>>;
    /**
     * Get Node Graph integration Resource: integrations Authorized roles: viewer
     * @summary Get node graph integration
     * @param {IntegrationApiIntegrationControllerGetNodeGraphIntegrationRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IntegrationApi
     */
    integrationControllerGetNodeGraphIntegration(requestParameters: IntegrationApiIntegrationControllerGetNodeGraphIntegrationRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<IntegrationControllerGetNodeGraphIntegrations200ResponseInner, any>>;
    /**
     * Get Node Graph integrations Resource: integrations Authorized roles: administrator
     * @summary Get node graph integrations
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IntegrationApi
     */
    integrationControllerGetNodeGraphIntegrations(options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<IntegrationControllerGetNodeGraphIntegrations200ResponseInner[], any>>;
    /**
     * Create a Google integration Resource: integrations Authorized roles: administrator
     * @summary Google
     * @param {IntegrationApiIntegrationControllerGoogleRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IntegrationApi
     */
    integrationControllerGoogle(requestParameters: IntegrationApiIntegrationControllerGoogleRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<IntegrationControllerCreateHTTPIntegration200Response, any>>;
    /**
     * Create a Slack integration Resource: integrations Authorized roles: administrator
     * @summary Slack
     * @param {IntegrationApiIntegrationControllerSlackRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IntegrationApi
     */
    integrationControllerSlack(requestParameters: IntegrationApiIntegrationControllerSlackRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<IntegrationControllerSlack200Response, any>>;
    /**
     * Update HTTP integration Resource: integrations Authorized roles: administrator
     * @summary Update http integration
     * @param {IntegrationApiIntegrationControllerUpdateHTTPIntegrationRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IntegrationApi
     */
    integrationControllerUpdateHTTPIntegration(requestParameters: IntegrationApiIntegrationControllerUpdateHTTPIntegrationRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<IntegrationControllerGetHTTPIntegrations200ResponseInner, any>>;
    /**
     * Update Node Graph integration Resource: integrations Authorized roles: administrator
     * @summary Update node graph integration
     * @param {IntegrationApiIntegrationControllerUpdateNodeGraphIntegrationRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IntegrationApi
     */
    integrationControllerUpdateNodeGraphIntegration(requestParameters: IntegrationApiIntegrationControllerUpdateNodeGraphIntegrationRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<IntegrationControllerGetNodeGraphIntegrations200ResponseInner, any>>;
}
