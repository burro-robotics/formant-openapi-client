/**
 * Formant admin-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.193.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { RequestArgs, BaseAPI } from '../base';
import { OrganizationControllerQueryUsageRecords200Response } from '../formant-models';
import { OrganizationControllerQueryUsageRecordsRequest } from '../formant-models';
/**
 * OrganizationApi - axios parameter creator
 * @export
 */
export declare const OrganizationApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Query for usage records Resource: organization Authorized roles: administrator
     * @summary Query usage records
     * @param {string} id
     * @param {OrganizationControllerQueryUsageRecordsRequest} organizationControllerQueryUsageRecordsRequest UsageRecordQuery
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    organizationControllerQueryUsageRecords: (id: string, organizationControllerQueryUsageRecordsRequest: OrganizationControllerQueryUsageRecordsRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * OrganizationApi - functional programming interface
 * @export
 */
export declare const OrganizationApiFp: (configuration?: Configuration) => {
    /**
     * Query for usage records Resource: organization Authorized roles: administrator
     * @summary Query usage records
     * @param {string} id
     * @param {OrganizationControllerQueryUsageRecordsRequest} organizationControllerQueryUsageRecordsRequest UsageRecordQuery
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    organizationControllerQueryUsageRecords(id: string, organizationControllerQueryUsageRecordsRequest: OrganizationControllerQueryUsageRecordsRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<OrganizationControllerQueryUsageRecords200Response>>;
};
/**
 * OrganizationApi - factory interface
 * @export
 */
export declare const OrganizationApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Query for usage records Resource: organization Authorized roles: administrator
     * @summary Query usage records
     * @param {OrganizationApiOrganizationControllerQueryUsageRecordsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    organizationControllerQueryUsageRecords(requestParameters: OrganizationApiOrganizationControllerQueryUsageRecordsRequest, options?: RawAxiosRequestConfig): AxiosPromise<OrganizationControllerQueryUsageRecords200Response>;
};
/**
 * Request parameters for organizationControllerQueryUsageRecords operation in OrganizationApi.
 * @export
 * @interface OrganizationApiOrganizationControllerQueryUsageRecordsRequest
 */
export interface OrganizationApiOrganizationControllerQueryUsageRecordsRequest {
    /**
     *
     * @type {string}
     * @memberof OrganizationApiOrganizationControllerQueryUsageRecords
     */
    readonly id: string;
    /**
     * UsageRecordQuery
     * @type {OrganizationControllerQueryUsageRecordsRequest}
     * @memberof OrganizationApiOrganizationControllerQueryUsageRecords
     */
    readonly organizationControllerQueryUsageRecordsRequest: OrganizationControllerQueryUsageRecordsRequest;
}
/**
 * OrganizationApi - object-oriented interface
 * @export
 * @class OrganizationApi
 * @extends {BaseAPI}
 */
export declare class OrganizationApi extends BaseAPI {
    /**
     * Query for usage records Resource: organization Authorized roles: administrator
     * @summary Query usage records
     * @param {OrganizationApiOrganizationControllerQueryUsageRecordsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OrganizationApi
     */
    organizationControllerQueryUsageRecords(requestParameters: OrganizationApiOrganizationControllerQueryUsageRecordsRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<OrganizationControllerQueryUsageRecords200Response, any>>;
}
