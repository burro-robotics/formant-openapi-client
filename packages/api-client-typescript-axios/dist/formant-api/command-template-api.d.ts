/**
 * Formant admin-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.193.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { RequestArgs, BaseAPI } from '../base';
import { CommandTemplateControllerList200Response } from '../formant-models';
import { CommandTemplateControllerPatchRequest } from '../formant-models';
import { CommandTemplateControllerPostRequest } from '../formant-models';
/**
 * CommandTemplateApi - axios parameter creator
 * @export
 */
export declare const CommandTemplateApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Delete a command template. Resource: commands Authorized roles: administrator
     * @summary Delete
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commandTemplateControllerDelete: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get a command template by command template ID. Resource: commands Authorized roles: viewer
     * @summary Get one
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commandTemplateControllerGetOne: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List command templates in your organization. Resource: commands Authorized roles: viewer
     * @summary List
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commandTemplateControllerList: (options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Update an existing command template. Resource: commands Authorized roles: administrator
     * @summary Patch
     * @param {string} id
     * @param {CommandTemplateControllerPatchRequest} commandTemplateControllerPatchRequest PartialCommandTemplate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commandTemplateControllerPatch: (id: string, commandTemplateControllerPatchRequest: CommandTemplateControllerPatchRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Create a new command template. Resource: commands Authorized roles: administrator
     * @summary Post
     * @param {CommandTemplateControllerPostRequest} commandTemplateControllerPostRequest CommandTemplate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commandTemplateControllerPost: (commandTemplateControllerPostRequest: CommandTemplateControllerPostRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * CommandTemplateApi - functional programming interface
 * @export
 */
export declare const CommandTemplateApiFp: (configuration?: Configuration) => {
    /**
     * Delete a command template. Resource: commands Authorized roles: administrator
     * @summary Delete
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commandTemplateControllerDelete(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Get a command template by command template ID. Resource: commands Authorized roles: viewer
     * @summary Get one
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commandTemplateControllerGetOne(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CommandTemplateControllerPostRequest>>;
    /**
     * List command templates in your organization. Resource: commands Authorized roles: viewer
     * @summary List
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commandTemplateControllerList(options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CommandTemplateControllerList200Response>>;
    /**
     * Update an existing command template. Resource: commands Authorized roles: administrator
     * @summary Patch
     * @param {string} id
     * @param {CommandTemplateControllerPatchRequest} commandTemplateControllerPatchRequest PartialCommandTemplate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commandTemplateControllerPatch(id: string, commandTemplateControllerPatchRequest: CommandTemplateControllerPatchRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CommandTemplateControllerPostRequest>>;
    /**
     * Create a new command template. Resource: commands Authorized roles: administrator
     * @summary Post
     * @param {CommandTemplateControllerPostRequest} commandTemplateControllerPostRequest CommandTemplate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commandTemplateControllerPost(commandTemplateControllerPostRequest: CommandTemplateControllerPostRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CommandTemplateControllerPostRequest>>;
};
/**
 * CommandTemplateApi - factory interface
 * @export
 */
export declare const CommandTemplateApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Delete a command template. Resource: commands Authorized roles: administrator
     * @summary Delete
     * @param {CommandTemplateApiCommandTemplateControllerDeleteRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commandTemplateControllerDelete(requestParameters: CommandTemplateApiCommandTemplateControllerDeleteRequest, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     * Get a command template by command template ID. Resource: commands Authorized roles: viewer
     * @summary Get one
     * @param {CommandTemplateApiCommandTemplateControllerGetOneRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commandTemplateControllerGetOne(requestParameters: CommandTemplateApiCommandTemplateControllerGetOneRequest, options?: RawAxiosRequestConfig): AxiosPromise<CommandTemplateControllerPostRequest>;
    /**
     * List command templates in your organization. Resource: commands Authorized roles: viewer
     * @summary List
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commandTemplateControllerList(options?: RawAxiosRequestConfig): AxiosPromise<CommandTemplateControllerList200Response>;
    /**
     * Update an existing command template. Resource: commands Authorized roles: administrator
     * @summary Patch
     * @param {CommandTemplateApiCommandTemplateControllerPatchRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commandTemplateControllerPatch(requestParameters: CommandTemplateApiCommandTemplateControllerPatchRequest, options?: RawAxiosRequestConfig): AxiosPromise<CommandTemplateControllerPostRequest>;
    /**
     * Create a new command template. Resource: commands Authorized roles: administrator
     * @summary Post
     * @param {CommandTemplateApiCommandTemplateControllerPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commandTemplateControllerPost(requestParameters: CommandTemplateApiCommandTemplateControllerPostRequest, options?: RawAxiosRequestConfig): AxiosPromise<CommandTemplateControllerPostRequest>;
};
/**
 * Request parameters for commandTemplateControllerDelete operation in CommandTemplateApi.
 * @export
 * @interface CommandTemplateApiCommandTemplateControllerDeleteRequest
 */
export interface CommandTemplateApiCommandTemplateControllerDeleteRequest {
    /**
     *
     * @type {string}
     * @memberof CommandTemplateApiCommandTemplateControllerDelete
     */
    readonly id: string;
}
/**
 * Request parameters for commandTemplateControllerGetOne operation in CommandTemplateApi.
 * @export
 * @interface CommandTemplateApiCommandTemplateControllerGetOneRequest
 */
export interface CommandTemplateApiCommandTemplateControllerGetOneRequest {
    /**
     *
     * @type {string}
     * @memberof CommandTemplateApiCommandTemplateControllerGetOne
     */
    readonly id: string;
}
/**
 * Request parameters for commandTemplateControllerPatch operation in CommandTemplateApi.
 * @export
 * @interface CommandTemplateApiCommandTemplateControllerPatchRequest
 */
export interface CommandTemplateApiCommandTemplateControllerPatchRequest {
    /**
     *
     * @type {string}
     * @memberof CommandTemplateApiCommandTemplateControllerPatch
     */
    readonly id: string;
    /**
     * PartialCommandTemplate
     * @type {CommandTemplateControllerPatchRequest}
     * @memberof CommandTemplateApiCommandTemplateControllerPatch
     */
    readonly commandTemplateControllerPatchRequest: CommandTemplateControllerPatchRequest;
}
/**
 * Request parameters for commandTemplateControllerPost operation in CommandTemplateApi.
 * @export
 * @interface CommandTemplateApiCommandTemplateControllerPostRequest
 */
export interface CommandTemplateApiCommandTemplateControllerPostRequest {
    /**
     * CommandTemplate
     * @type {CommandTemplateControllerPostRequest}
     * @memberof CommandTemplateApiCommandTemplateControllerPost
     */
    readonly commandTemplateControllerPostRequest: CommandTemplateControllerPostRequest;
}
/**
 * CommandTemplateApi - object-oriented interface
 * @export
 * @class CommandTemplateApi
 * @extends {BaseAPI}
 */
export declare class CommandTemplateApi extends BaseAPI {
    /**
     * Delete a command template. Resource: commands Authorized roles: administrator
     * @summary Delete
     * @param {CommandTemplateApiCommandTemplateControllerDeleteRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommandTemplateApi
     */
    commandTemplateControllerDelete(requestParameters: CommandTemplateApiCommandTemplateControllerDeleteRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     * Get a command template by command template ID. Resource: commands Authorized roles: viewer
     * @summary Get one
     * @param {CommandTemplateApiCommandTemplateControllerGetOneRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommandTemplateApi
     */
    commandTemplateControllerGetOne(requestParameters: CommandTemplateApiCommandTemplateControllerGetOneRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<CommandTemplateControllerPostRequest, any>>;
    /**
     * List command templates in your organization. Resource: commands Authorized roles: viewer
     * @summary List
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommandTemplateApi
     */
    commandTemplateControllerList(options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<CommandTemplateControllerList200Response, any>>;
    /**
     * Update an existing command template. Resource: commands Authorized roles: administrator
     * @summary Patch
     * @param {CommandTemplateApiCommandTemplateControllerPatchRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommandTemplateApi
     */
    commandTemplateControllerPatch(requestParameters: CommandTemplateApiCommandTemplateControllerPatchRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<CommandTemplateControllerPostRequest, any>>;
    /**
     * Create a new command template. Resource: commands Authorized roles: administrator
     * @summary Post
     * @param {CommandTemplateApiCommandTemplateControllerPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommandTemplateApi
     */
    commandTemplateControllerPost(requestParameters: CommandTemplateApiCommandTemplateControllerPostRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<CommandTemplateControllerPostRequest, any>>;
}
