/**
 * Formant admin-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.193.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { RequestArgs, BaseAPI } from '../base';
import { CommandResponseControllerPostRequest } from '../formant-models';
/**
 * CommandResponseApi - axios parameter creator
 * @export
 */
export declare const CommandResponseApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Respond to a command Resource: commands Authorized roles: device
     * @summary Post
     * @param {CommandResponseControllerPostRequest} commandResponseControllerPostRequest CommandResponse
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commandResponseControllerPost: (commandResponseControllerPostRequest: CommandResponseControllerPostRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * CommandResponseApi - functional programming interface
 * @export
 */
export declare const CommandResponseApiFp: (configuration?: Configuration) => {
    /**
     * Respond to a command Resource: commands Authorized roles: device
     * @summary Post
     * @param {CommandResponseControllerPostRequest} commandResponseControllerPostRequest CommandResponse
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commandResponseControllerPost(commandResponseControllerPostRequest: CommandResponseControllerPostRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CommandResponseControllerPostRequest>>;
};
/**
 * CommandResponseApi - factory interface
 * @export
 */
export declare const CommandResponseApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Respond to a command Resource: commands Authorized roles: device
     * @summary Post
     * @param {CommandResponseApiCommandResponseControllerPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    commandResponseControllerPost(requestParameters: CommandResponseApiCommandResponseControllerPostRequest, options?: RawAxiosRequestConfig): AxiosPromise<CommandResponseControllerPostRequest>;
};
/**
 * Request parameters for commandResponseControllerPost operation in CommandResponseApi.
 * @export
 * @interface CommandResponseApiCommandResponseControllerPostRequest
 */
export interface CommandResponseApiCommandResponseControllerPostRequest {
    /**
     * CommandResponse
     * @type {CommandResponseControllerPostRequest}
     * @memberof CommandResponseApiCommandResponseControllerPost
     */
    readonly commandResponseControllerPostRequest: CommandResponseControllerPostRequest;
}
/**
 * CommandResponseApi - object-oriented interface
 * @export
 * @class CommandResponseApi
 * @extends {BaseAPI}
 */
export declare class CommandResponseApi extends BaseAPI {
    /**
     * Respond to a command Resource: commands Authorized roles: device
     * @summary Post
     * @param {CommandResponseApiCommandResponseControllerPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CommandResponseApi
     */
    commandResponseControllerPost(requestParameters: CommandResponseApiCommandResponseControllerPostRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<CommandResponseControllerPostRequest, any>>;
}
