/**
 * Formant admin-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.193.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { RequestArgs, BaseAPI } from '../base';
import { SuggestionControllerCreateStructuredSuggestionRequest } from '../formant-models';
import { SuggestionControllerCreateThoughtsRequest } from '../formant-models';
/**
 * SuggestionApi - axios parameter creator
 * @export
 */
export declare const SuggestionApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * An endpoint for storing a document in the AI engine Resource: commands Authorized roles: viewer
     * @summary Create document
     * @param {any} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    suggestionControllerCreateDocument: (body: any, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * An endpoint for creating a structured thought Resource: commands Authorized roles: viewer
     * @summary Create embedding
     * @param {any} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    suggestionControllerCreateEmbedding: (body: any, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Create an image description Resource: commands Authorized roles: viewer
     * @summary Create image description
     * @param {any} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    suggestionControllerCreateImageDescription: (body: any, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Create a structured suggestions Resource: commands Authorized roles: viewer
     * @summary Create structured suggestion
     * @param {SuggestionControllerCreateStructuredSuggestionRequest} suggestionControllerCreateStructuredSuggestionRequest SuggestionRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    suggestionControllerCreateStructuredSuggestion: (suggestionControllerCreateStructuredSuggestionRequest: SuggestionControllerCreateStructuredSuggestionRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * An endpoint for creating a structured thought Resource: commands Authorized roles: viewer
     * @summary Create thoughts
     * @param {SuggestionControllerCreateThoughtsRequest} suggestionControllerCreateThoughtsRequest ThinkingRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    suggestionControllerCreateThoughts: (suggestionControllerCreateThoughtsRequest: SuggestionControllerCreateThoughtsRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * and endpoint for calculating similarity between embeddings Resource: commands Authorized roles: viewer
     * @summary Embedding similarity
     * @param {any} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    suggestionControllerEmbeddingSimilarity: (body: any, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Create an image description Resource: commands Authorized roles: viewer
     * @summary Execute intelligence graph
     * @param {any} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    suggestionControllerExecuteIntelligenceGraph: (body: any, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Generate an insight Resource: commands Authorized roles: viewer
     * @summary Generate insight
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    suggestionControllerGenerateInsight: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * An endpoint for querying a documents Resource: commands Authorized roles: viewer
     * @summary Query nearest documents
     * @param {any} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    suggestionControllerQueryNearestDocuments: (body: any, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * SuggestionApi - functional programming interface
 * @export
 */
export declare const SuggestionApiFp: (configuration?: Configuration) => {
    /**
     * An endpoint for storing a document in the AI engine Resource: commands Authorized roles: viewer
     * @summary Create document
     * @param {any} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    suggestionControllerCreateDocument(body: any, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * An endpoint for creating a structured thought Resource: commands Authorized roles: viewer
     * @summary Create embedding
     * @param {any} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    suggestionControllerCreateEmbedding(body: any, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Create an image description Resource: commands Authorized roles: viewer
     * @summary Create image description
     * @param {any} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    suggestionControllerCreateImageDescription(body: any, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Create a structured suggestions Resource: commands Authorized roles: viewer
     * @summary Create structured suggestion
     * @param {SuggestionControllerCreateStructuredSuggestionRequest} suggestionControllerCreateStructuredSuggestionRequest SuggestionRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    suggestionControllerCreateStructuredSuggestion(suggestionControllerCreateStructuredSuggestionRequest: SuggestionControllerCreateStructuredSuggestionRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * An endpoint for creating a structured thought Resource: commands Authorized roles: viewer
     * @summary Create thoughts
     * @param {SuggestionControllerCreateThoughtsRequest} suggestionControllerCreateThoughtsRequest ThinkingRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    suggestionControllerCreateThoughts(suggestionControllerCreateThoughtsRequest: SuggestionControllerCreateThoughtsRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * and endpoint for calculating similarity between embeddings Resource: commands Authorized roles: viewer
     * @summary Embedding similarity
     * @param {any} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    suggestionControllerEmbeddingSimilarity(body: any, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Create an image description Resource: commands Authorized roles: viewer
     * @summary Execute intelligence graph
     * @param {any} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    suggestionControllerExecuteIntelligenceGraph(body: any, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Generate an insight Resource: commands Authorized roles: viewer
     * @summary Generate insight
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    suggestionControllerGenerateInsight(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * An endpoint for querying a documents Resource: commands Authorized roles: viewer
     * @summary Query nearest documents
     * @param {any} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    suggestionControllerQueryNearestDocuments(body: any, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
/**
 * SuggestionApi - factory interface
 * @export
 */
export declare const SuggestionApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * An endpoint for storing a document in the AI engine Resource: commands Authorized roles: viewer
     * @summary Create document
     * @param {SuggestionApiSuggestionControllerCreateDocumentRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    suggestionControllerCreateDocument(requestParameters: SuggestionApiSuggestionControllerCreateDocumentRequest, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     * An endpoint for creating a structured thought Resource: commands Authorized roles: viewer
     * @summary Create embedding
     * @param {SuggestionApiSuggestionControllerCreateEmbeddingRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    suggestionControllerCreateEmbedding(requestParameters: SuggestionApiSuggestionControllerCreateEmbeddingRequest, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     * Create an image description Resource: commands Authorized roles: viewer
     * @summary Create image description
     * @param {SuggestionApiSuggestionControllerCreateImageDescriptionRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    suggestionControllerCreateImageDescription(requestParameters: SuggestionApiSuggestionControllerCreateImageDescriptionRequest, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     * Create a structured suggestions Resource: commands Authorized roles: viewer
     * @summary Create structured suggestion
     * @param {SuggestionApiSuggestionControllerCreateStructuredSuggestionRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    suggestionControllerCreateStructuredSuggestion(requestParameters: SuggestionApiSuggestionControllerCreateStructuredSuggestionRequest, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     * An endpoint for creating a structured thought Resource: commands Authorized roles: viewer
     * @summary Create thoughts
     * @param {SuggestionApiSuggestionControllerCreateThoughtsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    suggestionControllerCreateThoughts(requestParameters: SuggestionApiSuggestionControllerCreateThoughtsRequest, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     * and endpoint for calculating similarity between embeddings Resource: commands Authorized roles: viewer
     * @summary Embedding similarity
     * @param {SuggestionApiSuggestionControllerEmbeddingSimilarityRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    suggestionControllerEmbeddingSimilarity(requestParameters: SuggestionApiSuggestionControllerEmbeddingSimilarityRequest, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     * Create an image description Resource: commands Authorized roles: viewer
     * @summary Execute intelligence graph
     * @param {SuggestionApiSuggestionControllerExecuteIntelligenceGraphRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    suggestionControllerExecuteIntelligenceGraph(requestParameters: SuggestionApiSuggestionControllerExecuteIntelligenceGraphRequest, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     * Generate an insight Resource: commands Authorized roles: viewer
     * @summary Generate insight
     * @param {SuggestionApiSuggestionControllerGenerateInsightRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    suggestionControllerGenerateInsight(requestParameters: SuggestionApiSuggestionControllerGenerateInsightRequest, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     * An endpoint for querying a documents Resource: commands Authorized roles: viewer
     * @summary Query nearest documents
     * @param {SuggestionApiSuggestionControllerQueryNearestDocumentsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    suggestionControllerQueryNearestDocuments(requestParameters: SuggestionApiSuggestionControllerQueryNearestDocumentsRequest, options?: RawAxiosRequestConfig): AxiosPromise<void>;
};
/**
 * Request parameters for suggestionControllerCreateDocument operation in SuggestionApi.
 * @export
 * @interface SuggestionApiSuggestionControllerCreateDocumentRequest
 */
export interface SuggestionApiSuggestionControllerCreateDocumentRequest {
    /**
     *
     * @type {any}
     * @memberof SuggestionApiSuggestionControllerCreateDocument
     */
    readonly body: any;
}
/**
 * Request parameters for suggestionControllerCreateEmbedding operation in SuggestionApi.
 * @export
 * @interface SuggestionApiSuggestionControllerCreateEmbeddingRequest
 */
export interface SuggestionApiSuggestionControllerCreateEmbeddingRequest {
    /**
     *
     * @type {any}
     * @memberof SuggestionApiSuggestionControllerCreateEmbedding
     */
    readonly body: any;
}
/**
 * Request parameters for suggestionControllerCreateImageDescription operation in SuggestionApi.
 * @export
 * @interface SuggestionApiSuggestionControllerCreateImageDescriptionRequest
 */
export interface SuggestionApiSuggestionControllerCreateImageDescriptionRequest {
    /**
     *
     * @type {any}
     * @memberof SuggestionApiSuggestionControllerCreateImageDescription
     */
    readonly body: any;
}
/**
 * Request parameters for suggestionControllerCreateStructuredSuggestion operation in SuggestionApi.
 * @export
 * @interface SuggestionApiSuggestionControllerCreateStructuredSuggestionRequest
 */
export interface SuggestionApiSuggestionControllerCreateStructuredSuggestionRequest {
    /**
     * SuggestionRequest
     * @type {SuggestionControllerCreateStructuredSuggestionRequest}
     * @memberof SuggestionApiSuggestionControllerCreateStructuredSuggestion
     */
    readonly suggestionControllerCreateStructuredSuggestionRequest: SuggestionControllerCreateStructuredSuggestionRequest;
}
/**
 * Request parameters for suggestionControllerCreateThoughts operation in SuggestionApi.
 * @export
 * @interface SuggestionApiSuggestionControllerCreateThoughtsRequest
 */
export interface SuggestionApiSuggestionControllerCreateThoughtsRequest {
    /**
     * ThinkingRequest
     * @type {SuggestionControllerCreateThoughtsRequest}
     * @memberof SuggestionApiSuggestionControllerCreateThoughts
     */
    readonly suggestionControllerCreateThoughtsRequest: SuggestionControllerCreateThoughtsRequest;
}
/**
 * Request parameters for suggestionControllerEmbeddingSimilarity operation in SuggestionApi.
 * @export
 * @interface SuggestionApiSuggestionControllerEmbeddingSimilarityRequest
 */
export interface SuggestionApiSuggestionControllerEmbeddingSimilarityRequest {
    /**
     *
     * @type {any}
     * @memberof SuggestionApiSuggestionControllerEmbeddingSimilarity
     */
    readonly body: any;
}
/**
 * Request parameters for suggestionControllerExecuteIntelligenceGraph operation in SuggestionApi.
 * @export
 * @interface SuggestionApiSuggestionControllerExecuteIntelligenceGraphRequest
 */
export interface SuggestionApiSuggestionControllerExecuteIntelligenceGraphRequest {
    /**
     *
     * @type {any}
     * @memberof SuggestionApiSuggestionControllerExecuteIntelligenceGraph
     */
    readonly body: any;
}
/**
 * Request parameters for suggestionControllerGenerateInsight operation in SuggestionApi.
 * @export
 * @interface SuggestionApiSuggestionControllerGenerateInsightRequest
 */
export interface SuggestionApiSuggestionControllerGenerateInsightRequest {
    /**
     *
     * @type {string}
     * @memberof SuggestionApiSuggestionControllerGenerateInsight
     */
    readonly id: string;
}
/**
 * Request parameters for suggestionControllerQueryNearestDocuments operation in SuggestionApi.
 * @export
 * @interface SuggestionApiSuggestionControllerQueryNearestDocumentsRequest
 */
export interface SuggestionApiSuggestionControllerQueryNearestDocumentsRequest {
    /**
     *
     * @type {any}
     * @memberof SuggestionApiSuggestionControllerQueryNearestDocuments
     */
    readonly body: any;
}
/**
 * SuggestionApi - object-oriented interface
 * @export
 * @class SuggestionApi
 * @extends {BaseAPI}
 */
export declare class SuggestionApi extends BaseAPI {
    /**
     * An endpoint for storing a document in the AI engine Resource: commands Authorized roles: viewer
     * @summary Create document
     * @param {SuggestionApiSuggestionControllerCreateDocumentRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SuggestionApi
     */
    suggestionControllerCreateDocument(requestParameters: SuggestionApiSuggestionControllerCreateDocumentRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     * An endpoint for creating a structured thought Resource: commands Authorized roles: viewer
     * @summary Create embedding
     * @param {SuggestionApiSuggestionControllerCreateEmbeddingRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SuggestionApi
     */
    suggestionControllerCreateEmbedding(requestParameters: SuggestionApiSuggestionControllerCreateEmbeddingRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     * Create an image description Resource: commands Authorized roles: viewer
     * @summary Create image description
     * @param {SuggestionApiSuggestionControllerCreateImageDescriptionRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SuggestionApi
     */
    suggestionControllerCreateImageDescription(requestParameters: SuggestionApiSuggestionControllerCreateImageDescriptionRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     * Create a structured suggestions Resource: commands Authorized roles: viewer
     * @summary Create structured suggestion
     * @param {SuggestionApiSuggestionControllerCreateStructuredSuggestionRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SuggestionApi
     */
    suggestionControllerCreateStructuredSuggestion(requestParameters: SuggestionApiSuggestionControllerCreateStructuredSuggestionRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     * An endpoint for creating a structured thought Resource: commands Authorized roles: viewer
     * @summary Create thoughts
     * @param {SuggestionApiSuggestionControllerCreateThoughtsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SuggestionApi
     */
    suggestionControllerCreateThoughts(requestParameters: SuggestionApiSuggestionControllerCreateThoughtsRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     * and endpoint for calculating similarity between embeddings Resource: commands Authorized roles: viewer
     * @summary Embedding similarity
     * @param {SuggestionApiSuggestionControllerEmbeddingSimilarityRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SuggestionApi
     */
    suggestionControllerEmbeddingSimilarity(requestParameters: SuggestionApiSuggestionControllerEmbeddingSimilarityRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     * Create an image description Resource: commands Authorized roles: viewer
     * @summary Execute intelligence graph
     * @param {SuggestionApiSuggestionControllerExecuteIntelligenceGraphRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SuggestionApi
     */
    suggestionControllerExecuteIntelligenceGraph(requestParameters: SuggestionApiSuggestionControllerExecuteIntelligenceGraphRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     * Generate an insight Resource: commands Authorized roles: viewer
     * @summary Generate insight
     * @param {SuggestionApiSuggestionControllerGenerateInsightRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SuggestionApi
     */
    suggestionControllerGenerateInsight(requestParameters: SuggestionApiSuggestionControllerGenerateInsightRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     * An endpoint for querying a documents Resource: commands Authorized roles: viewer
     * @summary Query nearest documents
     * @param {SuggestionApiSuggestionControllerQueryNearestDocumentsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SuggestionApi
     */
    suggestionControllerQueryNearestDocuments(requestParameters: SuggestionApiSuggestionControllerQueryNearestDocumentsRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
}
