/**
 * Formant admin-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.193.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { RequestArgs, BaseAPI } from '../base';
import { SsoConfigurationControllerList200Response } from '../formant-models';
import { SsoConfigurationControllerList200ResponseItemsInner } from '../formant-models';
import { SsoConfigurationControllerPatchRequest } from '../formant-models';
/**
 * SsoConfigurationApi - axios parameter creator
 * @export
 */
export declare const SsoConfigurationApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Delete an SSO Configuration Resource: organization Authorized roles: administrator
     * @summary Delete
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ssoConfigurationControllerDelete: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get an SSO configuration by id Resource: organization Authorized roles: administrator
     * @summary Get
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ssoConfigurationControllerGet: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List all SSO configurations for the organization Resource: organization Authorized roles: administrator
     * @summary List
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ssoConfigurationControllerList: (options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Update the SSO configuration Resource: organization Authorized roles: administrator
     * @summary Patch
     * @param {string} id
     * @param {SsoConfigurationControllerPatchRequest} ssoConfigurationControllerPatchRequest PartialSsoConfiguration
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ssoConfigurationControllerPatch: (id: string, ssoConfigurationControllerPatchRequest: SsoConfigurationControllerPatchRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Create an SSO configuration for a domain Resource: organization Authorized roles: administrator
     * @summary Post
     * @param {SsoConfigurationControllerList200ResponseItemsInner} ssoConfigurationControllerList200ResponseItemsInner SsoConfiguration
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ssoConfigurationControllerPost: (ssoConfigurationControllerList200ResponseItemsInner: SsoConfigurationControllerList200ResponseItemsInner, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * SsoConfigurationApi - functional programming interface
 * @export
 */
export declare const SsoConfigurationApiFp: (configuration?: Configuration) => {
    /**
     * Delete an SSO Configuration Resource: organization Authorized roles: administrator
     * @summary Delete
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ssoConfigurationControllerDelete(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Get an SSO configuration by id Resource: organization Authorized roles: administrator
     * @summary Get
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ssoConfigurationControllerGet(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SsoConfigurationControllerList200ResponseItemsInner>>;
    /**
     * List all SSO configurations for the organization Resource: organization Authorized roles: administrator
     * @summary List
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ssoConfigurationControllerList(options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SsoConfigurationControllerList200Response>>;
    /**
     * Update the SSO configuration Resource: organization Authorized roles: administrator
     * @summary Patch
     * @param {string} id
     * @param {SsoConfigurationControllerPatchRequest} ssoConfigurationControllerPatchRequest PartialSsoConfiguration
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ssoConfigurationControllerPatch(id: string, ssoConfigurationControllerPatchRequest: SsoConfigurationControllerPatchRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SsoConfigurationControllerList200ResponseItemsInner>>;
    /**
     * Create an SSO configuration for a domain Resource: organization Authorized roles: administrator
     * @summary Post
     * @param {SsoConfigurationControllerList200ResponseItemsInner} ssoConfigurationControllerList200ResponseItemsInner SsoConfiguration
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ssoConfigurationControllerPost(ssoConfigurationControllerList200ResponseItemsInner: SsoConfigurationControllerList200ResponseItemsInner, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SsoConfigurationControllerList200ResponseItemsInner>>;
};
/**
 * SsoConfigurationApi - factory interface
 * @export
 */
export declare const SsoConfigurationApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Delete an SSO Configuration Resource: organization Authorized roles: administrator
     * @summary Delete
     * @param {SsoConfigurationApiSsoConfigurationControllerDeleteRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ssoConfigurationControllerDelete(requestParameters: SsoConfigurationApiSsoConfigurationControllerDeleteRequest, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     * Get an SSO configuration by id Resource: organization Authorized roles: administrator
     * @summary Get
     * @param {SsoConfigurationApiSsoConfigurationControllerGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ssoConfigurationControllerGet(requestParameters: SsoConfigurationApiSsoConfigurationControllerGetRequest, options?: RawAxiosRequestConfig): AxiosPromise<SsoConfigurationControllerList200ResponseItemsInner>;
    /**
     * List all SSO configurations for the organization Resource: organization Authorized roles: administrator
     * @summary List
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ssoConfigurationControllerList(options?: RawAxiosRequestConfig): AxiosPromise<SsoConfigurationControllerList200Response>;
    /**
     * Update the SSO configuration Resource: organization Authorized roles: administrator
     * @summary Patch
     * @param {SsoConfigurationApiSsoConfigurationControllerPatchRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ssoConfigurationControllerPatch(requestParameters: SsoConfigurationApiSsoConfigurationControllerPatchRequest, options?: RawAxiosRequestConfig): AxiosPromise<SsoConfigurationControllerList200ResponseItemsInner>;
    /**
     * Create an SSO configuration for a domain Resource: organization Authorized roles: administrator
     * @summary Post
     * @param {SsoConfigurationApiSsoConfigurationControllerPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ssoConfigurationControllerPost(requestParameters: SsoConfigurationApiSsoConfigurationControllerPostRequest, options?: RawAxiosRequestConfig): AxiosPromise<SsoConfigurationControllerList200ResponseItemsInner>;
};
/**
 * Request parameters for ssoConfigurationControllerDelete operation in SsoConfigurationApi.
 * @export
 * @interface SsoConfigurationApiSsoConfigurationControllerDeleteRequest
 */
export interface SsoConfigurationApiSsoConfigurationControllerDeleteRequest {
    /**
     *
     * @type {string}
     * @memberof SsoConfigurationApiSsoConfigurationControllerDelete
     */
    readonly id: string;
}
/**
 * Request parameters for ssoConfigurationControllerGet operation in SsoConfigurationApi.
 * @export
 * @interface SsoConfigurationApiSsoConfigurationControllerGetRequest
 */
export interface SsoConfigurationApiSsoConfigurationControllerGetRequest {
    /**
     *
     * @type {string}
     * @memberof SsoConfigurationApiSsoConfigurationControllerGet
     */
    readonly id: string;
}
/**
 * Request parameters for ssoConfigurationControllerPatch operation in SsoConfigurationApi.
 * @export
 * @interface SsoConfigurationApiSsoConfigurationControllerPatchRequest
 */
export interface SsoConfigurationApiSsoConfigurationControllerPatchRequest {
    /**
     *
     * @type {string}
     * @memberof SsoConfigurationApiSsoConfigurationControllerPatch
     */
    readonly id: string;
    /**
     * PartialSsoConfiguration
     * @type {SsoConfigurationControllerPatchRequest}
     * @memberof SsoConfigurationApiSsoConfigurationControllerPatch
     */
    readonly ssoConfigurationControllerPatchRequest: SsoConfigurationControllerPatchRequest;
}
/**
 * Request parameters for ssoConfigurationControllerPost operation in SsoConfigurationApi.
 * @export
 * @interface SsoConfigurationApiSsoConfigurationControllerPostRequest
 */
export interface SsoConfigurationApiSsoConfigurationControllerPostRequest {
    /**
     * SsoConfiguration
     * @type {SsoConfigurationControllerList200ResponseItemsInner}
     * @memberof SsoConfigurationApiSsoConfigurationControllerPost
     */
    readonly ssoConfigurationControllerList200ResponseItemsInner: SsoConfigurationControllerList200ResponseItemsInner;
}
/**
 * SsoConfigurationApi - object-oriented interface
 * @export
 * @class SsoConfigurationApi
 * @extends {BaseAPI}
 */
export declare class SsoConfigurationApi extends BaseAPI {
    /**
     * Delete an SSO Configuration Resource: organization Authorized roles: administrator
     * @summary Delete
     * @param {SsoConfigurationApiSsoConfigurationControllerDeleteRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SsoConfigurationApi
     */
    ssoConfigurationControllerDelete(requestParameters: SsoConfigurationApiSsoConfigurationControllerDeleteRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     * Get an SSO configuration by id Resource: organization Authorized roles: administrator
     * @summary Get
     * @param {SsoConfigurationApiSsoConfigurationControllerGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SsoConfigurationApi
     */
    ssoConfigurationControllerGet(requestParameters: SsoConfigurationApiSsoConfigurationControllerGetRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SsoConfigurationControllerList200ResponseItemsInner, any>>;
    /**
     * List all SSO configurations for the organization Resource: organization Authorized roles: administrator
     * @summary List
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SsoConfigurationApi
     */
    ssoConfigurationControllerList(options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SsoConfigurationControllerList200Response, any>>;
    /**
     * Update the SSO configuration Resource: organization Authorized roles: administrator
     * @summary Patch
     * @param {SsoConfigurationApiSsoConfigurationControllerPatchRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SsoConfigurationApi
     */
    ssoConfigurationControllerPatch(requestParameters: SsoConfigurationApiSsoConfigurationControllerPatchRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SsoConfigurationControllerList200ResponseItemsInner, any>>;
    /**
     * Create an SSO configuration for a domain Resource: organization Authorized roles: administrator
     * @summary Post
     * @param {SsoConfigurationApiSsoConfigurationControllerPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SsoConfigurationApi
     */
    ssoConfigurationControllerPost(requestParameters: SsoConfigurationApiSsoConfigurationControllerPostRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SsoConfigurationControllerList200ResponseItemsInner, any>>;
}
