/**
 * Formant admin-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.193.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { RequestArgs, BaseAPI } from '../base';
import { EventControllerQuery200ResponseItemsInnerOneOf1 } from '../formant-models';
import { InterventionRequestControllerList200Response } from '../formant-models';
/**
 * InterventionRequestApi - axios parameter creator
 * @export
 */
export declare const InterventionRequestApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Get an intervention request by intervention request ID. Resource: interventions Authorized roles: viewer, device
     * @summary Get one
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    interventionRequestControllerGetOne: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List all intervention requests in your organization. Resource: interventions Authorized roles: viewer
     * @summary List
     * @param {any} [page]
     * @param {number} [limit]
     * @param {InterventionRequestControllerListOrderEnum} [order]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    interventionRequestControllerList: (page?: any, limit?: number, order?: InterventionRequestControllerListOrderEnum, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Create a new intervention request. Resource: interventions Authorized roles: administrator, device
     * @summary Post
     * @param {EventControllerQuery200ResponseItemsInnerOneOf1} eventControllerQuery200ResponseItemsInnerOneOf1 InterventionRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    interventionRequestControllerPost: (eventControllerQuery200ResponseItemsInnerOneOf1: EventControllerQuery200ResponseItemsInnerOneOf1, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * InterventionRequestApi - functional programming interface
 * @export
 */
export declare const InterventionRequestApiFp: (configuration?: Configuration) => {
    /**
     * Get an intervention request by intervention request ID. Resource: interventions Authorized roles: viewer, device
     * @summary Get one
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    interventionRequestControllerGetOne(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<EventControllerQuery200ResponseItemsInnerOneOf1>>;
    /**
     * List all intervention requests in your organization. Resource: interventions Authorized roles: viewer
     * @summary List
     * @param {any} [page]
     * @param {number} [limit]
     * @param {InterventionRequestControllerListOrderEnum} [order]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    interventionRequestControllerList(page?: any, limit?: number, order?: InterventionRequestControllerListOrderEnum, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InterventionRequestControllerList200Response>>;
    /**
     * Create a new intervention request. Resource: interventions Authorized roles: administrator, device
     * @summary Post
     * @param {EventControllerQuery200ResponseItemsInnerOneOf1} eventControllerQuery200ResponseItemsInnerOneOf1 InterventionRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    interventionRequestControllerPost(eventControllerQuery200ResponseItemsInnerOneOf1: EventControllerQuery200ResponseItemsInnerOneOf1, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<EventControllerQuery200ResponseItemsInnerOneOf1>>;
};
/**
 * InterventionRequestApi - factory interface
 * @export
 */
export declare const InterventionRequestApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Get an intervention request by intervention request ID. Resource: interventions Authorized roles: viewer, device
     * @summary Get one
     * @param {InterventionRequestApiInterventionRequestControllerGetOneRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    interventionRequestControllerGetOne(requestParameters: InterventionRequestApiInterventionRequestControllerGetOneRequest, options?: RawAxiosRequestConfig): AxiosPromise<EventControllerQuery200ResponseItemsInnerOneOf1>;
    /**
     * List all intervention requests in your organization. Resource: interventions Authorized roles: viewer
     * @summary List
     * @param {InterventionRequestApiInterventionRequestControllerListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    interventionRequestControllerList(requestParameters?: InterventionRequestApiInterventionRequestControllerListRequest, options?: RawAxiosRequestConfig): AxiosPromise<InterventionRequestControllerList200Response>;
    /**
     * Create a new intervention request. Resource: interventions Authorized roles: administrator, device
     * @summary Post
     * @param {InterventionRequestApiInterventionRequestControllerPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    interventionRequestControllerPost(requestParameters: InterventionRequestApiInterventionRequestControllerPostRequest, options?: RawAxiosRequestConfig): AxiosPromise<EventControllerQuery200ResponseItemsInnerOneOf1>;
};
/**
 * Request parameters for interventionRequestControllerGetOne operation in InterventionRequestApi.
 * @export
 * @interface InterventionRequestApiInterventionRequestControllerGetOneRequest
 */
export interface InterventionRequestApiInterventionRequestControllerGetOneRequest {
    /**
     *
     * @type {string}
     * @memberof InterventionRequestApiInterventionRequestControllerGetOne
     */
    readonly id: string;
}
/**
 * Request parameters for interventionRequestControllerList operation in InterventionRequestApi.
 * @export
 * @interface InterventionRequestApiInterventionRequestControllerListRequest
 */
export interface InterventionRequestApiInterventionRequestControllerListRequest {
    /**
     *
     * @type {any}
     * @memberof InterventionRequestApiInterventionRequestControllerList
     */
    readonly page?: any;
    /**
     *
     * @type {number}
     * @memberof InterventionRequestApiInterventionRequestControllerList
     */
    readonly limit?: number;
    /**
     *
     * @type {'asc' | 'desc'}
     * @memberof InterventionRequestApiInterventionRequestControllerList
     */
    readonly order?: InterventionRequestControllerListOrderEnum;
}
/**
 * Request parameters for interventionRequestControllerPost operation in InterventionRequestApi.
 * @export
 * @interface InterventionRequestApiInterventionRequestControllerPostRequest
 */
export interface InterventionRequestApiInterventionRequestControllerPostRequest {
    /**
     * InterventionRequest
     * @type {EventControllerQuery200ResponseItemsInnerOneOf1}
     * @memberof InterventionRequestApiInterventionRequestControllerPost
     */
    readonly eventControllerQuery200ResponseItemsInnerOneOf1: EventControllerQuery200ResponseItemsInnerOneOf1;
}
/**
 * InterventionRequestApi - object-oriented interface
 * @export
 * @class InterventionRequestApi
 * @extends {BaseAPI}
 */
export declare class InterventionRequestApi extends BaseAPI {
    /**
     * Get an intervention request by intervention request ID. Resource: interventions Authorized roles: viewer, device
     * @summary Get one
     * @param {InterventionRequestApiInterventionRequestControllerGetOneRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InterventionRequestApi
     */
    interventionRequestControllerGetOne(requestParameters: InterventionRequestApiInterventionRequestControllerGetOneRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<EventControllerQuery200ResponseItemsInnerOneOf1, any>>;
    /**
     * List all intervention requests in your organization. Resource: interventions Authorized roles: viewer
     * @summary List
     * @param {InterventionRequestApiInterventionRequestControllerListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InterventionRequestApi
     */
    interventionRequestControllerList(requestParameters?: InterventionRequestApiInterventionRequestControllerListRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<InterventionRequestControllerList200Response, any>>;
    /**
     * Create a new intervention request. Resource: interventions Authorized roles: administrator, device
     * @summary Post
     * @param {InterventionRequestApiInterventionRequestControllerPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InterventionRequestApi
     */
    interventionRequestControllerPost(requestParameters: InterventionRequestApiInterventionRequestControllerPostRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<EventControllerQuery200ResponseItemsInnerOneOf1, any>>;
}
/**
 * @export
 */
export declare const InterventionRequestControllerListOrderEnum: {
    readonly Asc: "asc";
    readonly Desc: "desc";
};
export type InterventionRequestControllerListOrderEnum = typeof InterventionRequestControllerListOrderEnum[keyof typeof InterventionRequestControllerListOrderEnum];
