/**
 * Formant admin-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.193.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { RequestArgs, BaseAPI } from '../base';
import { CustomEventControllerBatchRequest } from '../formant-models';
import { CustomEventControllerPostRequest } from '../formant-models';
/**
 * CustomEventApi - axios parameter creator
 * @export
 */
export declare const CustomEventApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Resource: events Authorized roles: administrator, device
     * @summary Batch
     * @param {CustomEventControllerBatchRequest} customEventControllerBatchRequest CustomEventBatchRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    customEventControllerBatch: (customEventControllerBatchRequest: CustomEventControllerBatchRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Create a new custom event. Resource: events Authorized roles: administrator, device
     * @summary Post
     * @param {CustomEventControllerPostRequest} customEventControllerPostRequest CustomEvent
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    customEventControllerPost: (customEventControllerPostRequest: CustomEventControllerPostRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * CustomEventApi - functional programming interface
 * @export
 */
export declare const CustomEventApiFp: (configuration?: Configuration) => {
    /**
     * Resource: events Authorized roles: administrator, device
     * @summary Batch
     * @param {CustomEventControllerBatchRequest} customEventControllerBatchRequest CustomEventBatchRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    customEventControllerBatch(customEventControllerBatchRequest: CustomEventControllerBatchRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Create a new custom event. Resource: events Authorized roles: administrator, device
     * @summary Post
     * @param {CustomEventControllerPostRequest} customEventControllerPostRequest CustomEvent
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    customEventControllerPost(customEventControllerPostRequest: CustomEventControllerPostRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CustomEventControllerPostRequest>>;
};
/**
 * CustomEventApi - factory interface
 * @export
 */
export declare const CustomEventApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Resource: events Authorized roles: administrator, device
     * @summary Batch
     * @param {CustomEventApiCustomEventControllerBatchRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    customEventControllerBatch(requestParameters: CustomEventApiCustomEventControllerBatchRequest, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     * Create a new custom event. Resource: events Authorized roles: administrator, device
     * @summary Post
     * @param {CustomEventApiCustomEventControllerPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    customEventControllerPost(requestParameters: CustomEventApiCustomEventControllerPostRequest, options?: RawAxiosRequestConfig): AxiosPromise<CustomEventControllerPostRequest>;
};
/**
 * Request parameters for customEventControllerBatch operation in CustomEventApi.
 * @export
 * @interface CustomEventApiCustomEventControllerBatchRequest
 */
export interface CustomEventApiCustomEventControllerBatchRequest {
    /**
     * CustomEventBatchRequest
     * @type {CustomEventControllerBatchRequest}
     * @memberof CustomEventApiCustomEventControllerBatch
     */
    readonly customEventControllerBatchRequest: CustomEventControllerBatchRequest;
}
/**
 * Request parameters for customEventControllerPost operation in CustomEventApi.
 * @export
 * @interface CustomEventApiCustomEventControllerPostRequest
 */
export interface CustomEventApiCustomEventControllerPostRequest {
    /**
     * CustomEvent
     * @type {CustomEventControllerPostRequest}
     * @memberof CustomEventApiCustomEventControllerPost
     */
    readonly customEventControllerPostRequest: CustomEventControllerPostRequest;
}
/**
 * CustomEventApi - object-oriented interface
 * @export
 * @class CustomEventApi
 * @extends {BaseAPI}
 */
export declare class CustomEventApi extends BaseAPI {
    /**
     * Resource: events Authorized roles: administrator, device
     * @summary Batch
     * @param {CustomEventApiCustomEventControllerBatchRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CustomEventApi
     */
    customEventControllerBatch(requestParameters: CustomEventApiCustomEventControllerBatchRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     * Create a new custom event. Resource: events Authorized roles: administrator, device
     * @summary Post
     * @param {CustomEventApiCustomEventControllerPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CustomEventApi
     */
    customEventControllerPost(requestParameters: CustomEventApiCustomEventControllerPostRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<CustomEventControllerPostRequest, any>>;
}
