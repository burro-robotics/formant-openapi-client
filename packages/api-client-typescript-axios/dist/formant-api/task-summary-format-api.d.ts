/**
 * Formant admin-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.193.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { RequestArgs, BaseAPI } from '../base';
import { TaskSummaryFormatControllerList200Response } from '../formant-models';
import { TaskSummaryFormatControllerList200ResponseItemsInner } from '../formant-models';
/**
 * TaskSummaryFormatApi - axios parameter creator
 * @export
 */
export declare const TaskSummaryFormatApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * List all task summary formats in your organization. Resource: taskSummaries Authorized roles: viewer
     * @summary List
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    taskSummaryFormatControllerList: (options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Create a new task summary format. Resource: taskSummaries Authorized roles: operator
     * @summary Post
     * @param {TaskSummaryFormatControllerList200ResponseItemsInner} taskSummaryFormatControllerList200ResponseItemsInner TaskSummaryFormat
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    taskSummaryFormatControllerPost: (taskSummaryFormatControllerList200ResponseItemsInner: TaskSummaryFormatControllerList200ResponseItemsInner, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * TaskSummaryFormatApi - functional programming interface
 * @export
 */
export declare const TaskSummaryFormatApiFp: (configuration?: Configuration) => {
    /**
     * List all task summary formats in your organization. Resource: taskSummaries Authorized roles: viewer
     * @summary List
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    taskSummaryFormatControllerList(options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TaskSummaryFormatControllerList200Response>>;
    /**
     * Create a new task summary format. Resource: taskSummaries Authorized roles: operator
     * @summary Post
     * @param {TaskSummaryFormatControllerList200ResponseItemsInner} taskSummaryFormatControllerList200ResponseItemsInner TaskSummaryFormat
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    taskSummaryFormatControllerPost(taskSummaryFormatControllerList200ResponseItemsInner: TaskSummaryFormatControllerList200ResponseItemsInner, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TaskSummaryFormatControllerList200ResponseItemsInner>>;
};
/**
 * TaskSummaryFormatApi - factory interface
 * @export
 */
export declare const TaskSummaryFormatApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * List all task summary formats in your organization. Resource: taskSummaries Authorized roles: viewer
     * @summary List
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    taskSummaryFormatControllerList(options?: RawAxiosRequestConfig): AxiosPromise<TaskSummaryFormatControllerList200Response>;
    /**
     * Create a new task summary format. Resource: taskSummaries Authorized roles: operator
     * @summary Post
     * @param {TaskSummaryFormatApiTaskSummaryFormatControllerPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    taskSummaryFormatControllerPost(requestParameters: TaskSummaryFormatApiTaskSummaryFormatControllerPostRequest, options?: RawAxiosRequestConfig): AxiosPromise<TaskSummaryFormatControllerList200ResponseItemsInner>;
};
/**
 * Request parameters for taskSummaryFormatControllerPost operation in TaskSummaryFormatApi.
 * @export
 * @interface TaskSummaryFormatApiTaskSummaryFormatControllerPostRequest
 */
export interface TaskSummaryFormatApiTaskSummaryFormatControllerPostRequest {
    /**
     * TaskSummaryFormat
     * @type {TaskSummaryFormatControllerList200ResponseItemsInner}
     * @memberof TaskSummaryFormatApiTaskSummaryFormatControllerPost
     */
    readonly taskSummaryFormatControllerList200ResponseItemsInner: TaskSummaryFormatControllerList200ResponseItemsInner;
}
/**
 * TaskSummaryFormatApi - object-oriented interface
 * @export
 * @class TaskSummaryFormatApi
 * @extends {BaseAPI}
 */
export declare class TaskSummaryFormatApi extends BaseAPI {
    /**
     * List all task summary formats in your organization. Resource: taskSummaries Authorized roles: viewer
     * @summary List
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TaskSummaryFormatApi
     */
    taskSummaryFormatControllerList(options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<TaskSummaryFormatControllerList200Response, any>>;
    /**
     * Create a new task summary format. Resource: taskSummaries Authorized roles: operator
     * @summary Post
     * @param {TaskSummaryFormatApiTaskSummaryFormatControllerPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TaskSummaryFormatApi
     */
    taskSummaryFormatControllerPost(requestParameters: TaskSummaryFormatApiTaskSummaryFormatControllerPostRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<TaskSummaryFormatControllerList200ResponseItemsInner, any>>;
}
