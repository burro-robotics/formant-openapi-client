/**
 * Formant admin-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.193.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AnnotationTemplateControllerPostRequestDeviceScope } from './annotation-template-controller-post-request-device-scope';
import { DeviceControllerPostRequestDeviceScope } from './device-controller-post-request-device-scope';
import { DeviceControllerPostRequestFollowersInner } from './device-controller-post-request-followers-inner';
import { DeviceControllerPostRequestState } from './device-controller-post-request-state';
/**
 *
 * @export
 * @interface DeviceControllerPostRequest
 */
export interface DeviceControllerPostRequest {
    /**
     * ID of the organization which contains this device.
     * @type {string}
     * @memberof DeviceControllerPostRequest
     */
    'organizationId'?: string;
    /**
     * Name of this device.
     * @type {string}
     * @memberof DeviceControllerPostRequest
     */
    'name': string;
    /**
     * Description of this device.
     * @type {string}
     * @memberof DeviceControllerPostRequest
     */
    'description'?: string | null;
    /**
     * Enter `default`.
     * @type {string}
     * @memberof DeviceControllerPostRequest
     */
    'type'?: DeviceControllerPostRequestTypeEnum;
    /**
     * ID of the user associated with this device.
     * @type {string}
     * @memberof DeviceControllerPostRequest
     */
    'userId'?: string | null;
    /**
     * ID of the fleet with which this device is associated.
     * @type {string}
     * @memberof DeviceControllerPostRequest
     */
    'fleetId'?: string | null;
    /**
     *
     * @type {string}
     * @memberof DeviceControllerPostRequest
     */
    'publicKey'?: string;
    /**
     *
     * @type {AnnotationTemplateControllerPostRequestDeviceScope}
     * @memberof DeviceControllerPostRequest
     */
    'scope'?: AnnotationTemplateControllerPostRequestDeviceScope | null;
    /**
     *
     * @type {DeviceControllerPostRequestDeviceScope}
     * @memberof DeviceControllerPostRequest
     */
    'deviceScope'?: DeviceControllerPostRequestDeviceScope;
    /**
     * Agent version you want to install if different from the latest version. Must have `formant-sidecar` installed.
     * @type {string}
     * @memberof DeviceControllerPostRequest
     */
    'desiredAgentVersion'?: string | null;
    /**
     * Device configuration version you want to apply. Ignore for new device configuration.
     * @type {number}
     * @memberof DeviceControllerPostRequest
     */
    'desiredConfigurationVersion'?: number | null;
    /**
     *
     * @type {number}
     * @memberof DeviceControllerPostRequest
     */
    'temporaryConfigurationVersion'?: number | null;
    /**
     *
     * @type {string}
     * @memberof DeviceControllerPostRequest
     */
    'temporaryConfigurationExpiration'?: string | null;
    /**
     *
     * @type {string}
     * @memberof DeviceControllerPostRequest
     */
    'temporaryConfigurationTemplateId'?: string | null;
    /**
     * Users who receive SMS updates from this device.
     * @type {Array<DeviceControllerPostRequestFollowersInner>}
     * @memberof DeviceControllerPostRequest
     */
    'followers'?: Array<DeviceControllerPostRequestFollowersInner>;
    /**
     * Slack channels which receive updates from this device.
     * @type {Set<string>}
     * @memberof DeviceControllerPostRequest
     */
    'slackChannels'?: Set<string>;
    /**
     *
     * @type {DeviceControllerPostRequestState}
     * @memberof DeviceControllerPostRequest
     */
    'state'?: DeviceControllerPostRequestState;
    /**
     *
     * @type {boolean}
     * @memberof DeviceControllerPostRequest
     */
    'enabled'?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof DeviceControllerPostRequest
     */
    'fullyConfigured'?: boolean;
    /**
     *
     * @type {string}
     * @memberof DeviceControllerPostRequest
     */
    'disabledAt'?: string | null;
    /**
     *
     * @type {string}
     * @memberof DeviceControllerPostRequest
     */
    'id'?: string;
    /**
     *
     * @type {string}
     * @memberof DeviceControllerPostRequest
     */
    'createdAt'?: string;
    /**
     *
     * @type {string}
     * @memberof DeviceControllerPostRequest
     */
    'updatedAt'?: string;
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof DeviceControllerPostRequest
     */
    'tags'?: {
        [key: string]: string;
    };
}
export declare const DeviceControllerPostRequestTypeEnum: {
    readonly Default: "default";
    readonly Capture: "capture";
};
export type DeviceControllerPostRequestTypeEnum = typeof DeviceControllerPostRequestTypeEnum[keyof typeof DeviceControllerPostRequestTypeEnum];
