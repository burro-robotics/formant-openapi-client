/**
 * Formant admin-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.193.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { DeviceControllerFilterRequestSortInner } from './device-controller-filter-request-sort-inner';
/**
 *
 * @export
 * @interface DeviceControllerFilterRequest
 */
export interface DeviceControllerFilterRequest {
    /**
     * Query devices by name.
     * @type {string}
     * @memberof DeviceControllerFilterRequest
     */
    'name'?: string;
    /**
     * Query partial device names with wildcard `*`.
     * @type {string}
     * @memberof DeviceControllerFilterRequest
     */
    'query'?: string;
    /**
     * Query devices by organization ID.
     * @type {string}
     * @memberof DeviceControllerFilterRequest
     */
    'organizationId'?: string;
    /**
     * Query devices by tags.
     * @type {any}
     * @memberof DeviceControllerFilterRequest
     */
    'tags'?: any;
    /**
     * Query devices by fleet ID.
     * @type {string}
     * @memberof DeviceControllerFilterRequest
     */
    'fleetId'?: string | null;
    /**
     * Query devices by enabled status.
     * @type {boolean}
     * @memberof DeviceControllerFilterRequest
     */
    'enabled'?: boolean;
    /**
     * Query devices by configured status.
     * @type {boolean}
     * @memberof DeviceControllerFilterRequest
     */
    'fullyConfigured'?: boolean;
    /**
     * Query devices by device type.
     * @type {string}
     * @memberof DeviceControllerFilterRequest
     */
    'type'?: DeviceControllerFilterRequestTypeEnum;
    /**
     * Limit the number of devices returned by this query (max 1000).
     * @type {number}
     * @memberof DeviceControllerFilterRequest
     */
    'count'?: number;
    /**
     * Paginate the results by specifying an offset.
     * @type {number}
     * @memberof DeviceControllerFilterRequest
     */
    'offset'?: number;
    /**
     * Query devices created after this date.
     * @type {string}
     * @memberof DeviceControllerFilterRequest
     */
    'createdAfter'?: string;
    /**
     * Query devices disabled (deleted) before this date.
     * @type {string}
     * @memberof DeviceControllerFilterRequest
     */
    'disabledBefore'?: string;
    /**
     * Query online devices.
     * @type {boolean}
     * @memberof DeviceControllerFilterRequest
     */
    'online'?: boolean;
    /**
     * Include device online status in the response.
     * @type {boolean}
     * @memberof DeviceControllerFilterRequest
     */
    'fillOnlineStatus'?: boolean;
    /**
     * Include last seen timestamp in the response.
     * @type {boolean}
     * @memberof DeviceControllerFilterRequest
     */
    'fillLastSeen'?: boolean;
    /**
     * Sort order for the query results.
     * @type {Array<DeviceControllerFilterRequestSortInner>}
     * @memberof DeviceControllerFilterRequest
     */
    'sort'?: Array<DeviceControllerFilterRequestSortInner>;
}
export declare const DeviceControllerFilterRequestTypeEnum: {
    readonly Default: "default";
    readonly Capture: "capture";
};
export type DeviceControllerFilterRequestTypeEnum = typeof DeviceControllerFilterRequestTypeEnum[keyof typeof DeviceControllerFilterRequestTypeEnum];
