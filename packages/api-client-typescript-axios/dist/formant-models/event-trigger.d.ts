/**
 * Formant admin-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.193.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { DeviceControllerPostRequestDeviceScopeViews } from './device-controller-post-request-device-scope-views';
import { EventTriggerControllerGetAll200ResponseItemsInnerCommandsInner } from './event-trigger-controller-get-all200-response-items-inner-commands-inner';
import { EventTriggerControllerGetAll200ResponseItemsInnerCondition } from './event-trigger-controller-get-all200-response-items-inner-condition';
import { EventTriggerControllerGetAll200ResponseItemsInnerForwardingConfiguration } from './event-trigger-controller-get-all200-response-items-inner-forwarding-configuration';
import { EventTriggerControllerGetAll200ResponseItemsInnerPredicate } from './event-trigger-controller-get-all200-response-items-inner-predicate';
import { EventTriggerControllerGetAll200ResponseItemsInnerStatefulTriggerConfiguration } from './event-trigger-controller-get-all200-response-items-inner-stateful-trigger-configuration';
import { EventTriggerControllerGetAll200ResponseItemsInnerTriggeredConfiguration } from './event-trigger-controller-get-all200-response-items-inner-triggered-configuration';
import { EventTriggerControllerGetAll200ResponseItemsInnerWorkflowsInner } from './event-trigger-controller-get-all200-response-items-inner-workflows-inner';
/**
 *
 * @export
 * @interface EventTrigger
 */
export interface EventTrigger {
    /**
     *
     * @type {string}
     * @memberof EventTrigger
     */
    'organizationId'?: string;
    /**
     *
     * @type {string}
     * @memberof EventTrigger
     */
    'eventType': EventTriggerEventTypeEnum;
    /**
     *
     * @type {string}
     * @memberof EventTrigger
     */
    'message': string;
    /**
     *
     * @type {EventTriggerControllerGetAll200ResponseItemsInnerCondition}
     * @memberof EventTrigger
     */
    'condition': EventTriggerControllerGetAll200ResponseItemsInnerCondition | null;
    /**
     *
     * @type {EventTriggerControllerGetAll200ResponseItemsInnerCondition}
     * @memberof EventTrigger
     */
    'exitCondition': EventTriggerControllerGetAll200ResponseItemsInnerCondition | null;
    /**
     *
     * @type {EventTriggerControllerGetAll200ResponseItemsInnerPredicate}
     * @memberof EventTrigger
     */
    'predicate': EventTriggerControllerGetAll200ResponseItemsInnerPredicate | null;
    /**
     *
     * @type {number}
     * @memberof EventTrigger
     */
    'interval': number;
    /**
     *
     * @type {string}
     * @memberof EventTrigger
     */
    'severity': EventTriggerSeverityEnum;
    /**
     *
     * @type {boolean}
     * @memberof EventTrigger
     */
    'enabled'?: boolean;
    /**
     *
     * @type {string}
     * @memberof EventTrigger
     */
    'format'?: string;
    /**
     *
     * @type {EventTriggerControllerGetAll200ResponseItemsInnerTriggeredConfiguration}
     * @memberof EventTrigger
     */
    'triggeredConfiguration': EventTriggerControllerGetAll200ResponseItemsInnerTriggeredConfiguration | null;
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof EventTrigger
     */
    'smsTags'?: {
        [key: string]: string;
    };
    /**
     *
     * @type {DeviceControllerPostRequestDeviceScopeViews}
     * @memberof EventTrigger
     */
    'deviceScope'?: DeviceControllerPostRequestDeviceScopeViews | null;
    /**
     *
     * @type {Array<EventTriggerControllerGetAll200ResponseItemsInnerCommandsInner>}
     * @memberof EventTrigger
     */
    'commands': Array<EventTriggerControllerGetAll200ResponseItemsInnerCommandsInner>;
    /**
     *
     * @type {Array<EventTriggerControllerGetAll200ResponseItemsInnerWorkflowsInner>}
     * @memberof EventTrigger
     */
    'workflows': Array<EventTriggerControllerGetAll200ResponseItemsInnerWorkflowsInner> | null;
    /**
     *
     * @type {boolean}
     * @memberof EventTrigger
     */
    'notificationEnabled': boolean;
    /**
     *
     * @type {string}
     * @memberof EventTrigger
     */
    'lastTriggeredTime'?: string | null;
    /**
     *
     * @type {string}
     * @memberof EventTrigger
     */
    'eventTriggerGroupId'?: string | null;
    /**
     *
     * @type {EventTriggerControllerGetAll200ResponseItemsInnerStatefulTriggerConfiguration}
     * @memberof EventTrigger
     */
    'statefulTriggerConfiguration': EventTriggerControllerGetAll200ResponseItemsInnerStatefulTriggerConfiguration | null;
    /**
     *
     * @type {boolean}
     * @memberof EventTrigger
     */
    'isStateful'?: boolean;
    /**
     *
     * @type {EventTriggerControllerGetAll200ResponseItemsInnerForwardingConfiguration}
     * @memberof EventTrigger
     */
    'forwardingConfiguration': EventTriggerControllerGetAll200ResponseItemsInnerForwardingConfiguration | null;
    /**
     *
     * @type {boolean}
     * @memberof EventTrigger
     */
    'setsDeviceColor'?: boolean;
    /**
     *
     * @type {string}
     * @memberof EventTrigger
     */
    'id'?: string;
    /**
     *
     * @type {string}
     * @memberof EventTrigger
     */
    'createdAt'?: string;
    /**
     *
     * @type {string}
     * @memberof EventTrigger
     */
    'updatedAt'?: string;
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof EventTrigger
     */
    'tags'?: {
        [key: string]: string;
    };
}
export declare const EventTriggerEventTypeEnum: {
    readonly TriggeredEvent: "triggered-event";
    readonly DatapointEvent: "datapoint-event";
    readonly DeviceOnline: "device-online";
    readonly DeviceOffline: "device-offline";
    readonly InterventionRequest: "intervention-request";
    readonly InterventionResponse: "intervention-response";
    readonly TeleopSessionRecord: "teleop-session-record";
    readonly PortForwardingSessionRecord: "port-forwarding-session-record";
    readonly CommandRequest: "command-request";
    readonly CommandResponse: "command-response";
    readonly CommandDelivery: "command-delivery";
    readonly Custom: "custom";
    readonly Comment: "comment";
    readonly System: "system";
    readonly Annotation: "annotation";
    readonly TaskSummary: "task-summary";
    readonly Stateful: "stateful";
};
export type EventTriggerEventTypeEnum = typeof EventTriggerEventTypeEnum[keyof typeof EventTriggerEventTypeEnum];
export declare const EventTriggerSeverityEnum: {
    readonly Info: "info";
    readonly Warning: "warning";
    readonly Error: "error";
    readonly Critical: "critical";
};
export type EventTriggerSeverityEnum = typeof EventTriggerSeverityEnum[keyof typeof EventTriggerSeverityEnum];
