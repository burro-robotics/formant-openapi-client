/**
 * Formant admin-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.193.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AuthControllerCreateServiceAccount201ResponseUserScope } from './auth-controller-create-service-account201-response-user-scope';
/**
 *
 * @export
 * @interface CreateUserRequest
 */
export interface CreateUserRequest {
    /**
     * Enter a password for this user. If you don\'t fill in this field, the user will receive an email prompt to set a password.
     * @type {string}
     * @memberof CreateUserRequest
     */
    'password'?: string;
    /**
     *
     * @type {string}
     * @memberof CreateUserRequest
     */
    'emailConfigurationId'?: string;
    /**
     *
     * @type {string}
     * @memberof CreateUserRequest
     */
    'id'?: string;
    /**
     *
     * @type {string}
     * @memberof CreateUserRequest
     */
    'createdAt'?: string;
    /**
     *
     * @type {string}
     * @memberof CreateUserRequest
     */
    'updatedAt'?: string;
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof CreateUserRequest
     */
    'tags'?: {
        [key: string]: string;
    };
    /**
     * ID of the organization to which this user belongs.
     * @type {string}
     * @memberof CreateUserRequest
     */
    'organizationId'?: string;
    /**
     * ID of the account to which this user belongs.
     * @type {string}
     * @memberof CreateUserRequest
     */
    'accountId'?: string | null;
    /**
     * ID of this user\'s role.
     * @type {string}
     * @memberof CreateUserRequest
     */
    'roleId': string | null;
    /**
     * Email address of this user.
     * @type {string}
     * @memberof CreateUserRequest
     */
    'email': string;
    /**
     * Ignore this - for internal use only.
     * @type {string}
     * @memberof CreateUserRequest
     */
    'externalUserId'?: string | null;
    /**
     * First name of this user.
     * @type {string}
     * @memberof CreateUserRequest
     */
    'firstName': string;
    /**
     * Last name of this user.
     * @type {string}
     * @memberof CreateUserRequest
     */
    'lastName'?: string;
    /**
     *
     * @type {AuthControllerCreateServiceAccount201ResponseUserScope}
     * @memberof CreateUserRequest
     */
    'scope'?: AuthControllerCreateServiceAccount201ResponseUserScope | null;
    /**
     * ID of the team to which this user belongs.
     * @type {string}
     * @memberof CreateUserRequest
     */
    'teamId'?: string | null;
    /**
     * User\'s phone number (e.g., +14155550100).
     * @type {string}
     * @memberof CreateUserRequest
     */
    'phoneNumber'?: string;
    /**
     * Enable or disable this user. Set this to False to delete this user.
     * @type {boolean}
     * @memberof CreateUserRequest
     */
    'enabled'?: boolean;
    /**
     * Should this user have organization owner privileges?
     * @type {boolean}
     * @memberof CreateUserRequest
     */
    'isOrganizationOwner'?: boolean;
    /**
     * Has this user accepted Formant terms and conditions?
     * @type {string}
     * @memberof CreateUserRequest
     */
    'termsAccepted'?: string;
    /**
     *
     * @type {string}
     * @memberof CreateUserRequest
     */
    'lastLoggedIn'?: string;
    /**
     *
     * @type {string}
     * @memberof CreateUserRequest
     */
    'passwordHash'?: string | null;
    /**
     *
     * @type {boolean}
     * @memberof CreateUserRequest
     */
    'isSingleSignOn'?: boolean;
    /**
     *
     * @type {string}
     * @memberof CreateUserRequest
     */
    'smsOptInStatus'?: CreateUserRequestSmsOptInStatusEnum | null;
    /**
     *
     * @type {string}
     * @memberof CreateUserRequest
     */
    'region'?: CreateUserRequestRegionEnum;
    /**
     *
     * @type {boolean}
     * @memberof CreateUserRequest
     */
    'isServiceAccount'?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CreateUserRequest
     */
    'allowCustomEmailConfiguration'?: boolean;
    /**
     *
     * @type {string}
     * @memberof CreateUserRequest
     */
    'jobTitle'?: string;
    /**
     *
     * @type {string}
     * @memberof CreateUserRequest
     */
    'language'?: CreateUserRequestLanguageEnum;
    /**
     *
     * @type {string}
     * @memberof CreateUserRequest
     */
    'units'?: CreateUserRequestUnitsEnum;
    /**
     *
     * @type {string}
     * @memberof CreateUserRequest
     */
    'timezone'?: string;
    /**
     * Title for the user.
     * @type {string}
     * @memberof CreateUserRequest
     */
    'title'?: string | null;
    /**
     *
     * @type {string}
     * @memberof CreateUserRequest
     */
    'description'?: string | null;
}
export declare const CreateUserRequestSmsOptInStatusEnum: {
    readonly In: "OPT_IN";
    readonly Out: "OPT_OUT";
};
export type CreateUserRequestSmsOptInStatusEnum = typeof CreateUserRequestSmsOptInStatusEnum[keyof typeof CreateUserRequestSmsOptInStatusEnum];
export declare const CreateUserRequestRegionEnum: {
    readonly Amer: "AMER";
    readonly Emea: "EMEA";
    readonly Japac: "JAPAC";
};
export type CreateUserRequestRegionEnum = typeof CreateUserRequestRegionEnum[keyof typeof CreateUserRequestRegionEnum];
export declare const CreateUserRequestLanguageEnum: {
    readonly EnUs: "en-US";
    readonly FrCa: "fr-CA";
};
export type CreateUserRequestLanguageEnum = typeof CreateUserRequestLanguageEnum[keyof typeof CreateUserRequestLanguageEnum];
export declare const CreateUserRequestUnitsEnum: {
    readonly Metric: "metric";
    readonly Imperial: "imperial";
};
export type CreateUserRequestUnitsEnum = typeof CreateUserRequestUnitsEnum[keyof typeof CreateUserRequestUnitsEnum];
